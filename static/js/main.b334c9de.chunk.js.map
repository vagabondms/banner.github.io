{"version":3,"sources":["utils/data.ts","utils/localStorage.ts","hooks/useDataContext.tsx","styles/global-styles.tsx","styles/css/colors.ts","styles/css/border.ts","styles/css/fonts.ts","styles/css/justifying.ts","styles/css/sizing.ts","styles/css/spacing.ts","components/atoms/Button.tsx","components/atoms/Layout.tsx","components/atoms/Wrapper.tsx","components/atoms/BannerBackground.tsx","components/atoms/BannerText.tsx","components/molecules/Banner.tsx","components/atoms/Divider.tsx","components/atoms/GithubIcon.tsx","components/molecules/Header.tsx","components/atoms/ColorPicker.tsx","components/atoms/Label.tsx","components/molecules/LabeledColorPicker.tsx","components/atoms/SlidingModal.tsx","components/atoms/Selector.tsx","components/molecules/LabeledSelector.tsx","components/atoms/Toggle.tsx","components/molecules/LabeledToggle.tsx","components/organisms/SlidingMenu.tsx","components/organisms/BackgroundBox.tsx","components/atoms/Input.tsx","components/molecules/LabeledInput.tsx","components/organisms/InputBox.tsx","App.tsx","index.tsx"],"names":["widthGenerator","result","i","push","label","value","heightGenerator","fontSizeGenerator","fontType","diffSize","type","getDiffSize","getDataFromLocalStorage","key","data","localStorage","getItem","val","JSON","parse","error","isJSON","initialState","title","subTitle","tag","font","height","width","titleFontSize","subTitleFontSize","tagFontSize","fontColor","backgroundColor","underline","dataContext","createContext","onChangeHandler","Provider","children","useState","setData","useEffect","localStorageData","prev","stringifiedData","stringify","setItem","setDataInLocalStorage","e","hex","target","useData","useContext","fonts","css","GlobalStyles","styles","orangeLightBorder","colors","defaultRadius","mainSize","largeSize","buttonSize","defaultFlex","centering","spaceBetween","large","small","defaultSpacing","labelSpacing","StyledButton","styled","button","border","spacing","buttonType","Button","text","onClick","rest","StyledDiv","div","Layout","wrapperType","justifying","Wrapper","forwardRef","ref","displayName","BannerBackground","BannerText","Preview","_","style","fontFamily","color","fontSize","borderBottom","fontWeight","marginTop","position","bottom","dividerType","Divider","props","GithubIcon","xmlns","viewBox","fill","d","StyledA","a","Header","href","rel","sizing","StyledInnerDiv","StyledPopoverDiv","StyledCoverDiv","ColorPicker","name","onChange","pickerPosition","isVisible","setIsVisible","id","StyledLabel","Label","memo","LabeledColorPicker","htmlFor","visible","SlidingModalInnerWrapper","SlidingModal","StyledSelect","select","StyledOption","option","Selector","options","map","LabeledSelector","ToggleOuter","checked","ToggleInner","Toggle","LabeledInput","InputBox","LabeledToggle","BackgroundBox","setVisible","SlidingMenu","StyledInput","input","Input","placeholder","App","bannerRef","useRef","captureImage","current","capture","link","document","createElement","underbarTitle","replaceAll","download","toDataURL","click","Banner","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b334c9de.chunk.js","sourcesContent":["import { TOptions } from '@atoms/Selector';\n\nexport const fontGenerator = (): TOptions => {\n  return [\n    { label: 'Noto-sans', value: 'Noto-sans' },\n    { label: '고운돋움', value: 'GowunDodum-Regular' },\n    { label: 'G마켓 Sans M', value: 'GmarketSansMedium' },\n    { label: '여기어때 잘난체', value: 'yg-jalnan' },\n    { label: '리디 바탕', value: 'RIDIBatang' },\n    { label: '배민 한나체', value: 'BMHANNAPro' },\n    { label: '원스토어 고딕', value: 'ONE-Mobile-Title' },\n    { label: '나눔 바른펜', value: 'NanumBarunpen' },\n    { label: '한글 누리체', value: 'HangeulNuri-Bold' },\n  ];\n};\n\nexport const widthGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 600; i <= 1000; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\nexport const heightGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 250; i <= 400; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\ntype TFontType = 'title' | 'subTitle' | 'tag';\n\nexport const fontSizeGenerator = (fontType: TFontType): TOptions => {\n  const getDiffSize = (type: TFontType) => {\n    switch (type) {\n      case 'title':\n        return 0;\n      case 'subTitle':\n        return 30;\n      case 'tag':\n        return 30;\n    }\n  };\n\n  const diffSize = getDiffSize(fontType);\n  const result = [];\n  for (let i = 40 - diffSize; i <= 80 - diffSize; i += 5) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\nexport const isJSON = (val: string): boolean => {\n  try {\n    JSON.parse(val);\n  } catch (error) {\n    return false;\n  }\n  return true;\n};\n","import { TData } from '@hooks/useDataContext';\n\nimport { isJSON } from './data';\n\nexport const setDataInLocalStorage = (key: string, data: TData): void => {\n  const stringifiedData = JSON.stringify(data);\n  localStorage.setItem(key, stringifiedData);\n  return;\n};\n\nexport const getDataFromLocalStorage = (key: string): TData | void => {\n  const data = localStorage.getItem(key) ?? '';\n  if (isJSON(data)) {\n    const parsedData = JSON.parse(data);\n    return parsedData;\n  }\n};\n","import React, { useContext, createContext, ReactElement, useEffect, useState } from 'react';\n\nimport { getDataFromLocalStorage, setDataInLocalStorage } from '@utils/localStorage';\nexport interface IProviderProps {\n  children: ReactElement;\n}\n\nconst initialState = {\n  title: '',\n  subTitle: '',\n  tag: '',\n  font: 'RIDIBatang',\n  height: 350,\n  width: 700,\n  titleFontSize: 55,\n  subTitleFontSize: 25,\n  tagFontSize: 15,\n  fontColor: '#533535',\n  backgroundColor: '#E6CCA9',\n  underline: true,\n};\n\nexport type TData = typeof initialState;\nexport type Key = keyof TData;\n\ninterface IContext {\n  data: TData;\n  onChangeHandler: (key: keyof TData) => (e: any) => void;\n}\n\nconst dataContext = createContext<IContext>({\n  data: {\n    title: '',\n    subTitle: '',\n    tag: '',\n    height: 0,\n    width: 0,\n    font: '',\n    fontColor: '',\n    backgroundColor: '',\n    titleFontSize: 0,\n    subTitleFontSize: 0,\n    tagFontSize: 0,\n    underline: true,\n  },\n  onChangeHandler: () => () => {},\n});\n\nexport const Provider = ({ children }: IProviderProps): ReactElement => {\n  const [data, setData] = useState(initialState);\n\n  const onChangeHandler = (key: Key) => (e: any) => {\n    if (typeof e === 'boolean') {\n      setData((prev) => ({\n        ...prev,\n        [key]: e,\n      }));\n    } else if ('hex' in e) {\n      setData((prev) => ({\n        ...prev,\n        [key]: e.hex,\n      }));\n    } else {\n      setData((prev) => ({\n        ...prev,\n        [key]: e.target.value,\n      }));\n    }\n  };\n\n  useEffect(() => {\n    const localStorageData = getDataFromLocalStorage('data');\n    if (localStorageData) {\n      setData((prev) => ({\n        ...prev,\n        ...localStorageData,\n      }));\n    }\n  }, [setData]);\n\n  useEffect(() => {\n    setDataInLocalStorage('data', data);\n  }, [data]);\n\n  const value = {\n    data,\n    onChangeHandler,\n  };\n\n  return <dataContext.Provider value={value}>{children}</dataContext.Provider>;\n};\n\nexport const useData = (): IContext => useContext(dataContext);\n","import React, { ReactElement } from 'react';\n\nimport { Global, css } from '@emotion/react';\n\nconst fonts = css`\n  @font-face {\n    font-family: 'GowunDodum-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/GowunDodum-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Square';\n    src: url('https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'GmarketSansMedium';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'yg-jalnan';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_four@1.2/JalnanOTF00.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'RIDIBatang';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_twelve@1.0/RIDIBatang.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'BMHANNAPro';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Godic';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'ONE-Mobile-Title';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/ONE-Mobile-Title.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'NanumBarunpen';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumBarunpen.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'HangeulNuri-Bold';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_three@1.0/HangeulNuri-Bold.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Pretendard-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n`;\n\nconst GlobalStyles = (): ReactElement => {\n  return (\n    <Global\n      styles={css`\n        ${fonts}\n        * {\n          box-sizing: border-box;\n        }\n        html,\n        body,\n        #root {\n          height: 100vh;\n          width: 100vw;\n          /* min-width: 1100px; */\n          min-height: 790px;\n          padding: 0;\n          margin: 0;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,\n            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n          background-color: #233142;\n        }\n      `}\n    ></Global>\n  );\n};\n\nexport default GlobalStyles;\n","export default {\n  blue: '#4f9da6',\n  red: '#ff5959',\n  orange: '#facf5a',\n  black: '#233142',\n};\n","import { css } from '@emotion/react';\n\nimport colors from './colors';\n\nconst orangeLightBorder = `1px solid ${colors.orange}`;\nconst defaultRadius = css`\n  border-radius: 5px;\n`;\nexport default {\n  orangeLightBorder,\n  defaultRadius,\n};\n","import { css } from '@emotion/react';\n\nconst mainSize = css`\n  font-size: 13px;\n`;\n\nconst largeSize = css`\n  font-size: 15px;\n`;\n\nconst buttonSize = css`\n  font-size: 18px;\n`;\n\nexport default {\n  mainSize,\n  largeSize,\n  buttonSize,\n};\n","import { css } from '@emotion/react';\n\nconst defaultFlex = css`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  -webkit-flex-align: center;\n`;\n\nexport const centering = css`\n  justify-content: center;\n  ${defaultFlex}\n`;\n\nexport const spaceBetween = css`\n  ${defaultFlex}\n  justify-content: space-between;\n`;\n\nexport default {\n  centering,\n  spaceBetween,\n};\n","import { css } from '@emotion/react';\n\nexport const large = css`\n  width: 200px;\n  height: 30px;\n`;\n\nexport const small = css`\n  width: 100px;\n  height: 30px;\n`;\n\nexport default {\n  large,\n  small,\n};\n","import { css } from '@emotion/react';\n\nexport const defaultSpacing = css`\n  margin: 5px;\n  padding: 5px;\n`;\nexport const labelSpacing = css`\n  margin-top: 15px;\n  margin-left: 5px;\n`;\n\nexport default {\n  defaultSpacing,\n  labelSpacing,\n};\n","import React, { CSSProperties, ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { border, colors, fonts, spacing } from '@styles/css';\n\nexport interface IButtonProps {\n  text: string;\n  onClick: () => void;\n  style?: CSSProperties;\n  buttonType?: 'point';\n}\n\ntype TStyledButtonProps = Omit<IButtonProps, 'text'>;\n\nconst handleButtonType = ({ buttonType }: TStyledButtonProps) => {\n  switch (buttonType) {\n    case 'point':\n      return css`\n        background-color: ${colors.red};\n        height: 50px;\n        width: 200px;\n        ${fonts.buttonSize}\n      `;\n    default:\n      return css`\n        background-color: ${colors.blue};\n        font-size: 15px;\n        width: 150px;\n        height: 35px;\n      `;\n  }\n};\n\nconst StyledButton = styled.button<TStyledButtonProps>`\n  ${border.defaultRadius}\n  ${spacing.defaultSpacing}\n  \n  border: none;\n  cursor: pointer;\n  margin-top: 10px;\n  font-weight: bold;\n  opacity: 0.9;\n  color: ${colors.black};\n\n  ${handleButtonType}\n\n  :hover {\n    opacity: 1;\n    border: 2px solid ${colors.black};\n  }\n  :active {\n    box-shadow: none;\n    animation: none;\n  }\n\n  /* @keyframes shake {\n    0% {\n      transform: rotate(0deg);\n    }\n    50% {\n      transform: rotate(-1deg);\n    }\n    100% {\n      transform: rotate(1deg);\n    }\n  } */\n`;\n\nconst Button = ({ text, onClick, ...rest }: IButtonProps): ReactElement => {\n  return (\n    <StyledButton onClick={onClick} {...rest}>\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface ILayoutProps {\n  children: ReactElement[] | ReactElement | ReactNode;\n  style?: CSSProperties;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  width: 100%;\n  height: calc(100% - 50px);\n  position: relative;\n`;\n\nexport const Layout = ({ children, ...rest }: ILayoutProps): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n","import React, { ReactElement, forwardRef } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { justifying } from '@styles/css';\n\ntype TWrapperType = 'box' | 'button' | 'sub' | 'banner' | 'label';\n\ntype TWrapperProps = {\n  children: ReactElement[] | ReactElement;\n  wrapperType: TWrapperType;\n};\n\nconst handleWrapperType = ({ wrapperType }: TWrapperProps) => {\n  switch (wrapperType) {\n    case 'box':\n      return css`\n        width: 700px;\n        ${justifying.spaceBetween}\n      `;\n    case 'button':\n      return css`\n        flex-direction: row-reverse;\n        ${justifying.spaceBetween}\n        margin-top : 10px;\n        width: 700px;\n      `;\n    case 'sub':\n      return css`\n        ${justifying.centering}\n      `;\n    case 'banner':\n      return css`\n        ${justifying.centering}\n        height: 410px;\n      `;\n    case 'label':\n      return css`\n        display: flex;\n        flex-direction: column;\n        text-align: left;\n        align-items: center;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledDiv = styled.div`\n  ${handleWrapperType};\n`;\n\nconst Wrapper = forwardRef<HTMLDivElement, TWrapperProps>(({ children, ...rest }: TWrapperProps, ref): ReactElement => {\n  return (\n    <StyledDiv ref={ref} {...rest}>\n      {children}\n    </StyledDiv>\n  );\n});\n\nWrapper.displayName = 'Wrapper';\n\nexport default Wrapper;\n","import React, { CSSProperties, forwardRef, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\nimport { justifying } from '@styles/css';\n\nconst StyledDiv = styled.div`\n  ${justifying.centering}\n  flex-direction: column;\n  overflow: hidden;\n  padding: 20px 0;\n  position: relative;\n`;\ntype TBannerBackground = {\n  children: ReactElement[] | ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerBackground = forwardRef<HTMLDivElement, TBannerBackground>(\n  ({ children, ...rest }: TBannerBackground, ref): ReactElement => {\n    return (\n      <StyledDiv ref={ref} {...rest}>\n        {children}\n      </StyledDiv>\n    );\n  },\n);\n\nBannerBackground.displayName = 'BannerBackground';\n\nexport default BannerBackground;\n","import React, { CSSProperties, ReactNode, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\nimport { justifying } from '@styles/css';\n\nconst StyledDiv = styled.div`\n  white-space: nowrap;\n  ${justifying.centering}\n`;\n\ntype TBannerText = {\n  children: ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerText = ({ children, ...rest }: TBannerText): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n\nexport default BannerText;\n","import React, { forwardRef } from 'react';\n\nimport BannerBackground from '@atoms/BannerBackground';\nimport BannerText from '@atoms/BannerText';\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useDataContext';\n\nconst Preview = forwardRef<HTMLDivElement>((_, ref) => {\n  const {\n    data: {\n      title,\n      subTitle,\n      tag,\n      font,\n      width,\n      height,\n      backgroundColor,\n      fontColor,\n      titleFontSize,\n      subTitleFontSize,\n      tagFontSize,\n      underline,\n    },\n  } = useData();\n\n  return (\n    <Wrapper wrapperType=\"banner\">\n      <BannerBackground\n        ref={ref}\n        style={{\n          width: `${width}px`,\n          height: `${height}px`,\n          fontFamily: font,\n          backgroundColor,\n          color: fontColor,\n        }}\n      >\n        <BannerText\n          style={{\n            fontSize: `${titleFontSize}px`,\n            borderBottom: subTitle && underline ? `3px solid ${fontColor}` : 'none',\n            fontWeight: 'bold',\n          }}\n        >\n          {title}\n        </BannerText>\n        {subTitle && <BannerText style={{ fontSize: `${subTitleFontSize}px`, marginTop: 10 }}>{subTitle}</BannerText>}\n        {tag && <BannerText style={{ fontSize: `${tagFontSize}px`, position: 'absolute', bottom: 40 }}>{tag}</BannerText>}\n      </BannerBackground>\n    </Wrapper>\n  );\n});\nPreview.displayName = 'Preview';\n\nexport default Preview;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype TDividerType = 'parallel' | 'vertical';\n\ntype TDividerProps = {\n  dividerType: TDividerType;\n};\n\nconst handleDividerType = ({ dividerType }: TDividerProps) => {\n  switch (dividerType) {\n    case 'parallel':\n      return css`\n        width: 110px;\n        border-bottom: 1px solid lightgrey;\n        margin-bottom: 5px;\n        padding-top: 20px;\n      `;\n    case 'vertical':\n      return css`\n        height: 100%;\n        border-right: 1px solid lightgrey;\n        margin-right: 10px;\n        padding-left: 10px;\n      `;\n  }\n};\n\nconst StyledDiv = styled.div<TDividerProps>`\n  ${handleDividerType}\n`;\n\nconst Divider = (props: TDividerProps): ReactElement => {\n  return <StyledDiv {...props}></StyledDiv>;\n};\n\nexport default Divider;\n","import React, { ReactElement } from 'react';\n\nimport { colors } from '@styles/css';\n\nconst GithubIcon = (): ReactElement => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path\n        fill={colors.red}\n        d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n      />\n    </svg>\n  );\n};\n\nexport default GithubIcon;\n","import React, { ReactElement } from 'react';\n\nimport Divider from '@atoms/Divider';\nimport GithubIcon from '@atoms/GithubIcon';\nimport { colors, fonts } from '@css';\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  width: 100%;\n  height: 50px;\n  background-color: ${colors.black};\n  ${fonts.buttonSize}\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  padding: 10px;\n  font-weight: bold;\n  color: ${colors.red};\n  z-index: 10;\n  border-bottom: 1px solid #b3b1b5;\n`;\n\nconst StyledA = styled.a`\n  margin-top: 4px;\n`;\n\nconst Header = (): ReactElement => {\n  return (\n    <StyledDiv>\n      <StyledA\n        style={{ marginTop: 4 }}\n        href=\"https://github.com/vagabondms/banner.github.io\"\n        title=\"repo\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <GithubIcon />\n      </StyledA>\n      <Divider dividerType=\"vertical\" />\n      <div>BannerMaker</div>\n    </StyledDiv>\n  );\n};\n\nexport default Header;\n","import React, { ReactElement, useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { border, sizing, spacing } from '@styles/css';\ntype TPickerPositionEnum = 'top' | 'left' | 'right' | 'bottom';\n\nexport interface IColorPickerProps {\n  name: string;\n  onChange: (e: any) => void;\n  color: string;\n  pickerPosition?: TPickerPositionEnum;\n}\n\nconst StyledDiv = styled.div`\n  ${sizing.small}\n  border : ${border.orangeLightBorder};\n  ${border.defaultRadius}\n  ${spacing.defaultSpacing}\n  overflow: hidden;\n  cursor: pointer;\n`;\nconst StyledInnerDiv = styled.div`\n  height: 100%;\n`;\n\nconst handlePickerPosition = ({ position }: { position: TPickerPositionEnum }) => {\n  switch (position) {\n    case 'top':\n      return css`\n        bottom: 40px;\n        right: -60px;\n      `;\n    case 'left':\n      return css`\n        bottom: -150px;\n        right: 110px;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledPopoverDiv = styled.div<{ position: TPickerPositionEnum }>`\n  position: absolute;\n  z-index: 2;\n\n  ${handlePickerPosition};\n`;\nconst StyledCoverDiv = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n`;\n\nconst ColorPicker = ({ name, color, onChange, pickerPosition = 'bottom' }: IColorPickerProps): ReactElement => {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledDiv\n        id={name}\n        onClick={() => {\n          setIsVisible(true);\n        }}\n      >\n        <StyledInnerDiv style={{ backgroundColor: color }}></StyledInnerDiv>\n      </StyledDiv>\n      {isVisible ? (\n        <>\n          <StyledPopoverDiv position={pickerPosition}>\n            <StyledCoverDiv\n              onClick={() => {\n                setIsVisible(false);\n              }}\n            ></StyledCoverDiv>\n            <SketchPicker color={color} onChange={onChange}></SketchPicker>\n          </StyledPopoverDiv>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { memo, ReactNode, ReactElement, LabelHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\nimport { colors, fonts, spacing } from '@styles/css';\n\ninterface ILabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n  children: ReactNode;\n}\n\nconst StyledLabel = styled.label`\n  background: transparent;\n  color: ${colors.blue};\n  ${spacing.labelSpacing}\n  ${fonts.largeSize}\n  font-weight: bold;\n  white-space: nowrap;\n  width: 100%;\n`;\n\nconst Label = ({ children, ...rest }: ILabelProps): ReactElement => {\n  return <StyledLabel {...rest}>{children}</StyledLabel>;\n};\n\nexport default memo(Label);\n","import React, { ReactElement } from 'react';\n\nimport ColorPicker, { IColorPickerProps } from '@atoms/ColorPicker';\nimport Label from '@atoms/Label';\nimport Wrapper from '@atoms/Wrapper';\n\ntype ILabeledInputProps = IColorPickerProps;\n\nconst LabeledColorPicker = ({ name, color, onChange, ...rest }: ILabeledInputProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <ColorPicker color={color} name={name} onChange={onChange} {...rest}></ColorPicker>\n    </Wrapper>\n  );\n};\n\nexport default LabeledColorPicker;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport type TSlidingModalProps = {\n  children?: ReactElement[] | ReactElement;\n  visible: boolean;\n};\n\nconst handleVisible = ({ visible }: TSlidingModalProps) => {\n  switch (visible) {\n    case true:\n      return css`\n        left: 0;\n        opacity: 1;\n      `;\n    case false:\n      return css`\n        left: -190px;\n        opacity: 0;\n        * {\n          display: none;\n        }\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledDiv = styled.div`\n  height: 100%;\n  position: absolute;\n  width: 190px;\n  top: 0;\n  bottom: 0;\n  background-color: #3c4246;\n  z-index: 1;\n  ${handleVisible}\n  transition : 0.5s\n`;\n\nconst SlidingModalInnerWrapper = styled.div`\n  padding: 40px;\n`;\n\nconst SlidingModal = ({ children, ...rest }: TSlidingModalProps): ReactElement => {\n  return (\n    <StyledDiv {...rest}>\n      <SlidingModalInnerWrapper> {children}</SlidingModalInnerWrapper>\n    </StyledDiv>\n  );\n};\n\nexport default SlidingModal;\n","import React, { ReactElement, ReactEventHandler, SelectHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\nimport { border, colors, fonts, justifying, sizing, spacing } from '@styles/css';\n\nexport type TOption = { label: string | number; value: string | number };\nexport type TOptions = TOption[];\n\nexport interface ISelectorProps extends SelectHTMLAttributes<HTMLSelectElement> {\n  options: TOptions;\n  value: string | number;\n  onChange: ReactEventHandler;\n}\n\ntype TStyledSelectorProps = Omit<ISelectorProps, 'options'>;\n\nconst StyledSelect = styled.select<TStyledSelectorProps>`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  outline: 0 none;\n  background: transparent;\n  ${fonts.mainSize}\n  ${justifying.centering}\n  \n  ${border.defaultRadius}\n  border: ${border.orangeLightBorder};\n  ${sizing.small}\n  ${spacing.defaultSpacing}\n  color: ${colors.orange};\n`;\nconst StyledOption = styled.option``;\n\nconst Selector = ({ options, ...rest }: ISelectorProps): ReactElement => {\n  return (\n    <StyledSelect {...rest}>\n      {options.map(({ label, value }: TOption) => {\n        return (\n          <StyledOption key={label} value={value}>\n            {label}\n          </StyledOption>\n        );\n      })}\n    </StyledSelect>\n  );\n};\n\nexport default Selector;\n","import React, { ReactElement } from 'react';\n\nimport Label from '@atoms/Label';\nimport { ISelectorProps } from '@atoms/Selector';\nimport Selector from '@atoms/Selector';\nimport Wrapper from '@atoms/Wrapper';\n\ninterface ILabeledInputProps extends ISelectorProps {\n  name: string;\n}\n\nconst LabeledSelector = ({ name, options, value, onChange }: ILabeledInputProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <Selector id={name} value={value} onChange={onChange} options={options}></Selector>\n    </Wrapper>\n  );\n};\n\nexport default LabeledSelector;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { border, colors, justifying, sizing } from '@styles/css';\n\nexport interface TToggleProps {\n  id: string;\n  checked: boolean;\n  onClick: (e: any) => void;\n}\n\ntype TStyledToggleOuterProps = Omit<TToggleProps, 'onClick'>;\ntype TStyledToggleInnerProps = Omit<TToggleProps, 'onClick' | 'id'>;\n\nconst checkedHandlerOuter = ({ checked }: TStyledToggleInnerProps) => {\n  switch (checked) {\n    case true:\n      return css`\n        @keyframes bright {\n          from {\n            filter: brightness(70%);\n          }\n          to {\n            filter: brightness(100%);\n          }\n        }\n        animation: bright 0.5s forwards;\n      `;\n    case false:\n      return css`\n        @keyframes dim {\n          from {\n            filter: brightness(100%);\n          }\n          to {\n            filter: brightness(70%);\n          }\n        }\n        animation: dim 0.5s forwards;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst checkedHandlerInner = ({ checked }: TStyledToggleInnerProps) => {\n  if (!checked) {\n    return css`\n      transform: translateX(100%);\n    `;\n  }\n};\n\nconst ToggleOuter = styled.div<TStyledToggleOuterProps>`\n  ${sizing.small}\n  padding: 2px;\n  margin: 5px;\n\n  ${border.defaultRadius}\n  background-color: ${colors.black};\n\n  ${checkedHandlerOuter};\n`;\n\nconst ToggleInner = styled.div<TStyledToggleInnerProps>`\n  background-color: ${colors.blue};\n  ${border.defaultRadius}\n  width: 50%;\n  height: 100%;\n  transition: all 0.5s;\n  ${justifying.centering}\n  ${checkedHandlerInner};\n  color: ${colors.orange};\n`;\n\nconst Toggle = ({ checked, onClick, ...rest }: TToggleProps): ReactElement => {\n  const onClickHandler = () => {\n    onClick(!checked);\n  };\n\n  return (\n    <ToggleOuter checked={checked} onClick={onClickHandler} {...rest}>\n      <ToggleInner checked={checked}>{checked ? 'ON' : 'OFF'}</ToggleInner>\n    </ToggleOuter>\n  );\n};\n\nexport default Toggle;\n","import React, { ReactElement } from 'react';\n\nimport Label from '@atoms/Label';\nimport Toggle, { TToggleProps } from '@atoms/Toggle';\nimport Wrapper from '@atoms/Wrapper';\n\ninterface ILabeledToggleProps extends Omit<TToggleProps, 'id'> {\n  name: string;\n}\n\nconst LabeledInput = ({ name, ...rest }: ILabeledToggleProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <Toggle id={name} {...rest}></Toggle>\n    </Wrapper>\n  );\n};\n\nexport default LabeledInput;\n","import React, { ReactElement } from 'react';\n\nimport Divider from '@atoms/Divider';\nimport SlidingModal from '@atoms/SlidingModal';\nimport { TSlidingModalProps } from '@atoms/SlidingModal';\nimport { useData } from '@hooks/useDataContext';\nimport LabeledSelector from '@molecules/LabeledSelector';\nimport LabeledToggle from '@molecules/LabeledToggle';\nimport { fontSizeGenerator, fontGenerator } from '@utils/data';\nimport { widthGenerator, heightGenerator } from '@utils/data';\n\ntype TSlidingMenuProps = TSlidingModalProps;\n\nconst InputBox = ({ visible }: TSlidingMenuProps): ReactElement => {\n  const {\n    data: { width, height, font, titleFontSize, subTitleFontSize, tagFontSize, underline },\n    onChangeHandler,\n  } = useData();\n\n  return (\n    <SlidingModal visible={visible}>\n      <LabeledSelector name=\"폰트\" value={font} onChange={onChangeHandler('font')} options={fontGenerator()}></LabeledSelector>\n      <Divider dividerType=\"parallel\" />\n      <LabeledSelector\n        name=\"제목\"\n        value={titleFontSize}\n        onChange={onChangeHandler('titleFontSize')}\n        options={fontSizeGenerator('title')}\n      ></LabeledSelector>\n      <LabeledSelector\n        name=\"부제목\"\n        value={subTitleFontSize}\n        onChange={onChangeHandler('subTitleFontSize')}\n        options={fontSizeGenerator('subTitle')}\n      ></LabeledSelector>\n      <LabeledSelector\n        name=\"태그\"\n        value={tagFontSize}\n        onChange={onChangeHandler('titleFontSize')}\n        options={fontSizeGenerator('tag')}\n      ></LabeledSelector>\n      <Divider dividerType=\"parallel\" />\n      <LabeledSelector\n        options={widthGenerator()}\n        value={width}\n        onChange={onChangeHandler('width')}\n        name=\"배경 넓이\"\n      ></LabeledSelector>\n      <LabeledSelector\n        options={heightGenerator()}\n        value={height}\n        onChange={onChangeHandler('height')}\n        name=\"배경 높이\"\n      ></LabeledSelector>\n      <Divider dividerType=\"parallel\" />\n      <LabeledToggle name=\"밑줄 설정\" checked={underline} onClick={onChangeHandler('underline')}></LabeledToggle>\n    </SlidingModal>\n  );\n};\n\nexport default InputBox;\n","import React, { ReactElement, useState } from 'react';\n\nimport Button from '@atoms/Button';\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useDataContext';\nimport LabeledColorPicker from '@molecules/LabeledColorPicker';\nimport SlidingMenu from '@organisms/SlidingMenu';\n\nconst BackgroundBox = (): ReactElement => {\n  const [visible, setVisible] = useState(false);\n  const {\n    data: { backgroundColor, fontColor },\n    onChangeHandler,\n  } = useData();\n  return (\n    <Wrapper wrapperType=\"box\">\n      <Wrapper wrapperType=\"sub\">\n        <LabeledColorPicker\n          pickerPosition=\"top\"\n          color={fontColor}\n          onChange={onChangeHandler('fontColor')}\n          name=\"폰트색\"\n        ></LabeledColorPicker>\n        <LabeledColorPicker\n          name=\"배경색\"\n          pickerPosition=\"top\"\n          color={backgroundColor}\n          onChange={onChangeHandler('backgroundColor')}\n        ></LabeledColorPicker>\n      </Wrapper>\n\n      <Button\n        style={{ marginTop: 38 }}\n        text={`추가 설정 ${visible ? '닫기' : '열기'}`}\n        onClick={() => {\n          setVisible(!visible);\n        }}\n      ></Button>\n      <SlidingMenu visible={visible}></SlidingMenu>\n    </Wrapper>\n  );\n};\n\nexport default BackgroundBox;\n","import React, { InputHTMLAttributes, ReactElement, ReactEventHandler, HTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\nimport { border, colors, fonts, sizing, spacing } from '@styles/css';\n\nexport interface IInputProp extends HTMLAttributes<HTMLInputElement> {\n  onChange: ReactEventHandler;\n  placeholder: string;\n  type: 'text' | 'number';\n  value: string;\n}\n\ntype TStyledInputProp = InputHTMLAttributes<Element>;\n\nconst StyledInput = styled.input<TStyledInputProp>`\n  text-align: center;\n  background: transparent;\n  color: ${colors.blue};\n  ${fonts.mainSize}\n  border: ${border.orangeLightBorder};\n  ${border.defaultRadius}\n  ${sizing.large}\n  ${spacing.defaultSpacing}\n  :focus {\n    outline: none;\n    caret-color: #5ec59a;\n    ::placeholder {\n      visibility: hidden;\n    }\n  }\n`;\n\nconst Input = (props: IInputProp): ReactElement => {\n  return <StyledInput {...props} />;\n};\n\nexport default Input;\n","import React, { ReactElement } from 'react';\n\nimport Input, { IInputProp } from '@atoms/Input';\nimport Label from '@atoms/Label';\nimport Wrapper from '@atoms/Wrapper';\n\ninterface ILabeledInputProps extends IInputProp {\n  name: string;\n}\n\nconst LabeledInput = ({ name, ...rest }: ILabeledInputProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <Input id={name} {...rest}></Input>\n    </Wrapper>\n  );\n};\n\nexport default LabeledInput;\n","import React, { ReactElement } from 'react';\n\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useDataContext';\nimport LabeledInput from '@molecules/LabeledInput';\n\nconst InputBox = (): ReactElement => {\n  const {\n    data: { title, subTitle, tag },\n    onChangeHandler,\n  } = useData();\n  return (\n    <Wrapper wrapperType=\"box\">\n      <LabeledInput\n        name=\"제목\"\n        type=\"text\"\n        value={title}\n        onChange={onChangeHandler('title')}\n        placeholder=\"제목을 입력하세요\"\n      ></LabeledInput>\n      <LabeledInput\n        value={subTitle}\n        onChange={onChangeHandler('subTitle')}\n        name=\"부제목\"\n        type=\"text\"\n        placeholder=\"부제목을 입력하세요\"\n      ></LabeledInput>\n      <LabeledInput\n        value={tag}\n        onChange={onChangeHandler('tag')}\n        name=\"태그\"\n        type=\"text\"\n        placeholder=\"태그를 입력하세요\"\n      ></LabeledInput>\n    </Wrapper>\n  );\n};\n\nexport default InputBox;\n","import React, { ReactElement, useRef } from 'react';\n\nimport Button from '@atoms/Button';\nimport { Layout } from '@atoms/Layout';\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useDataContext';\nimport Banner from '@molecules/Banner';\nimport Header from '@molecules/Header';\nimport BackgroundBox from '@organisms/BackgroundBox';\nimport InputBox from '@organisms/InputBox';\nimport capture from 'html2canvas';\n\nconst App = (): ReactElement => {\n  const bannerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    data: { title },\n  } = useData();\n  const captureImage = async () => {\n    if (bannerRef.current) {\n      const result = await capture(bannerRef.current);\n      if (result) {\n        const link = document.createElement('a');\n        const underbarTitle = title.replaceAll(/(\\s)+/g, '_');\n        link.download = `${underbarTitle}.png`;\n        link.href = result?.toDataURL() ?? '';\n        link.click();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Layout>\n        <Banner ref={bannerRef} />\n        <InputBox></InputBox>\n        <BackgroundBox />\n        <Wrapper wrapperType=\"button\">\n          <Button\n            text=\"다운로드\"\n            buttonType=\"point\"\n            onClick={() => {\n              captureImage();\n            }}\n          ></Button>\n        </Wrapper>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from '@hooks/useDataContext';\nimport GlobalStyles from '@styles/global-styles';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}