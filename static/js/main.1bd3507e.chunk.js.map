{"version":3,"sources":["utils/global-styles.tsx","components/atoms/Button.tsx","components/atoms/ButtonWrapper.tsx","components/atoms/Header.tsx","components/atoms/Layout.tsx","hooks/useColor.ts","hooks/useInput.ts","hooks/useData.tsx","components/atoms/BannerBackground.tsx","components/atoms/BannerText.tsx","components/atoms/BannerWrapper.tsx","components/molecules/Banner.tsx","components/atoms/BoxWrapper.tsx","components/atoms/ColorPicker.tsx","components/atoms/Label.tsx","components/molecules/LabeledColorPicker.tsx","components/atoms/Selector.tsx","components/molecules/LabeledSelector.tsx","utils/data.ts","components/organisms/BackgroundBox.tsx","components/atoms/SubWrapper.tsx","components/atoms/Input.tsx","components/molecules/LabeledInput.tsx","components/organisms/InputBox.tsx","components/atoms/ModalWrapper.tsx","components/organisms/Preview.tsx","App.tsx","index.tsx"],"names":["fonts","css","GlobalStyles","styles","StyledButton","styled","button","Button","text","onClick","rest","StyledDiv","div","ButtonWrapper","children","Header","Layout","useInput","initialState","useState","value","setValue","useCallback","color","hex","e","target","dataContext","createContext","title","subTitle","tag","height","width","font","fontColor","backgroundColor","onTitleChange","console","log","onSubTitleChange","onTagChange","onWidthChange","onHeightChange","onFontChange","onFontColorChange","onBackgroundColorChange","Provider","useColor","useData","useContext","BannerBackground","forwardRef","ref","displayName","BannerText","BannerWrapper","Preview","_","style","Number","fontFamily","fontSize","borderBottom","fontWeight","marginTop","position","bottom","StyledDivWrapper","BoxWrapper","name","id","StyledInnerDiv","StyledPopoverDiv","StyledCoverDiv","ColorPicker","onChange","isVisible","setIsVisible","StyledLabel","label","Label","memo","LabeledInput","htmlFor","StyledSelect","select","StyledOption","option","Selector","options","map","LabeledSelector","widthGenerator","result","i","push","heightGenerator","BackgroundBox","LabeledColorPicker","WrapperBox","StyledInput","input","Input","props","InputBox","SubWrapper","type","placeholder","display","ModalWrapper","visible","onClosePreview","capturedResult","previewRef","useRef","onClickClose","current","innerHTML","useLayoutEffect","appendChild","zIndex","link","document","createElement","underbarTitle","replaceAll","download","href","toDataURL","click","App","setVisible","setCapturedResult","bannerRef","captureImage","a","capture","Banner","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bd3507e.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\n\nimport { Global, css } from '@emotion/react';\n\nconst fonts = css`\n  @font-face {\n    font-family: 'GowunDodum-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/GowunDodum-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Square';\n    src: url('https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'GmarketSansMedium';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'yg-jalnan';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_four@1.2/JalnanOTF00.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'RIDIBatang';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_twelve@1.0/RIDIBatang.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'BMHANNAPro';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Godic';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'ONE-Mobile-Title';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/ONE-Mobile-Title.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'NanumBarunpen';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumBarunpen.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'HangeulNuri-Bold';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_three@1.0/HangeulNuri-Bold.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Pretendard-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n`;\n\nconst GlobalStyles = (): ReactElement => {\n  return (\n    <Global\n      styles={css`\n        ${fonts}\n        html {\n          height: 100vh;\n          width: 100vw;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,\n            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n        }\n        body {\n          margin: 0;\n          padding: 0;\n          height: 100%;\n          width: 100%;\n          color: white;\n          background-color: #233142;\n        }\n      `}\n    ></Global>\n  );\n};\n\nexport default GlobalStyles;\n","import React, { CSSProperties, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface IButtonProps {\n  text: string;\n  onClick: () => void;\n  style?: CSSProperties;\n}\n\nconst StyledButton = styled.button`\n  background-color: #4f9da6;\n  color: #233142;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 200px;\n  height: 50px;\n  font-size: 20px;\n  font-weight: bold;\n  :hover {\n    animation: shake 0.4s;\n    animation-iteration-count: infinite;\n    box-shadow: 2px 2px 2px lightgrey;\n    background-color: #5ec59ad8;\n  }\n  :active {\n    background-color: #5ec59a;\n    box-shadow: none;\n    animation: none;\n  }\n\n  @keyframes shake {\n    0% {\n      transform: rotate(0deg);\n    }\n    50% {\n      transform: rotate(-1deg);\n    }\n    100% {\n      transform: rotate(1deg);\n    }\n  }\n`;\n\nconst Button = ({ text, onClick, ...rest }: IButtonProps): ReactElement => {\n  return (\n    <StyledButton onClick={onClick} {...rest}>\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  width: 650px;\n  margin: 15px 0;\n`;\ntype TButtonWrapper = {\n  children: ReactElement[] | ReactElement;\n};\nconst ButtonWrapper = ({ children }: TButtonWrapper): ReactElement => {\n  return <StyledDiv>{children}</StyledDiv>;\n};\n\nexport default ButtonWrapper;\n","import React, { ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  width: 100%;\n  min-width: 1100px;\n  height: 40px;\n  background-color: #ff5959;\n  position: absolute;\n  font-size: 20px;\n  display: flex;\n  padding: 0 10px;\n  flex-direction: row-reverse;\n  box-sizing: border-box;\n  align-items: center;\n  font-weight: bold;\n  color: #233142;\n`;\n\nconst Header = (): ReactElement => {\n  return <StyledDiv>BannerMaker</StyledDiv>;\n};\n\nexport default Header;\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface ILayoutProps {\n  children: ReactElement[] | ReactElement | ReactNode;\n  style?: CSSProperties;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  width: 1100px;\n  height: 100vh;\n  padding: 15px;\n  box-sizing: border-box;\n`;\n\nexport const Layout = ({ children, ...rest }: ILayoutProps): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n","import { useState, useCallback } from 'react';\nimport { ColorChangeHandler } from 'react-color';\nconst useInput = (initialState: string): [string, ColorChangeHandler] => {\n  const [value, setValue] = useState(initialState);\n\n  const onColorChange = useCallback((color) => {\n    setValue(color.hex);\n  }, []);\n\n  return [value, onColorChange];\n};\n\nexport default useInput;\n","import { ChangeEvent, ReactEventHandler, useState, useCallback } from 'react';\n\nconst useInput = (initialState: string): [string, ReactEventHandler] => {\n  const [value, setValue] = useState(initialState);\n\n  const onInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, onInputChange];\n};\n\nexport default useInput;\n","import React, { useContext, createContext, ReactElement, ReactEventHandler, ChangeEvent } from 'react';\nimport { ColorChangeHandler } from 'react-color';\n\nimport useColor from './useColor';\nimport useInput from './useInput';\nexport interface IProviderProps {\n  children: ReactElement[];\n}\n\ninterface IContext {\n  title: string;\n  subTitle: string;\n  tag: string;\n  height: string;\n  width: string;\n  font: string;\n  backgroundColor: string;\n  fontColor: string;\n  onTitleChange: ReactEventHandler;\n  onSubTitleChange: ReactEventHandler;\n  onTagChange: ReactEventHandler;\n  onWidthChange: ReactEventHandler;\n  onHeightChange: ReactEventHandler;\n  onFontChange: ReactEventHandler;\n  onFontColorChange: ColorChangeHandler;\n  onBackgroundColorChange: ColorChangeHandler;\n}\n\nconst dataContext = createContext<IContext>({\n  title: '',\n  subTitle: '',\n  tag: '',\n  height: '',\n  width: '',\n  font: '',\n  fontColor: '',\n  backgroundColor: '',\n  onTitleChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onSubTitleChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onTagChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onWidthChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onHeightChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onFontChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onFontColorChange: (color) => {\n    console.log(color);\n  },\n  onBackgroundColorChange: (color) => {\n    console.log(color);\n  },\n});\n\nexport const Provider = ({ children }: IProviderProps): ReactElement => {\n  const [title, onTitleChange] = useInput('');\n  const [subTitle, onSubTitleChange] = useInput('');\n  const [tag, onTagChange] = useInput('');\n  const [height, onHeightChange] = useInput('350');\n  const [width, onWidthChange] = useInput('700');\n  const [font, onFontChange] = useInput('Noto-sans');\n  const [backgroundColor, onBackgroundColorChange] = useColor('#E6CCA9');\n  const [fontColor, onFontColorChange] = useColor('#533535');\n  const value = {\n    title,\n    subTitle,\n    tag,\n    width,\n    height,\n    font,\n    fontColor,\n    backgroundColor,\n    onTitleChange,\n    onSubTitleChange,\n    onTagChange,\n    onHeightChange,\n    onWidthChange,\n    onFontChange,\n    onBackgroundColorChange,\n    onFontColorChange,\n  };\n\n  return <dataContext.Provider value={value}>{children}</dataContext.Provider>;\n};\n\nexport const useData = (): IContext => useContext(dataContext);\n","import React, { CSSProperties, forwardRef, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  padding: 20px 0;\n  box-sizing: border-box;\n  position: relative;\n`;\ntype TBannerBackground = {\n  children: ReactElement[] | ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerBackground = forwardRef<HTMLDivElement, TBannerBackground>(\n  ({ children, ...rest }: TBannerBackground, ref): ReactElement => {\n    return (\n      <StyledDiv ref={ref} {...rest}>\n        {children}\n      </StyledDiv>\n    );\n  },\n);\n\nBannerBackground.displayName = 'BannerBackground';\n\nexport default BannerBackground;\n","import React, { CSSProperties, ReactNode, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  white-space: nowrap;\n  display: flex;\n  box-sizing: border-box;\n  align-content: center;\n  justify-content: center;\n`;\n\ntype TBannerText = {\n  children: ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerText = ({ children, ...rest }: TBannerText): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n\nexport default BannerText;\n","import React, { forwardRef, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  height: 450px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n`;\n\ntype TBannerWrapperProps = {\n  children?: ReactElement;\n};\n\nconst BannerWrapper = forwardRef<HTMLDivElement, TBannerWrapperProps>(({ children }: TBannerWrapperProps, ref): ReactElement => {\n  return <StyledDiv ref={ref}>{children}</StyledDiv>;\n});\n\nBannerWrapper.displayName = 'BannerWrapper';\n\nexport default BannerWrapper;\n","import React, { forwardRef } from 'react';\n\nimport BannerBackground from '@atoms/BannerBackground';\nimport BannerText from '@atoms/BannerText';\nimport BannerWrapper from '@atoms/BannerWrapper';\nimport { useData } from '@hooks/useData';\n\nconst Preview = forwardRef<HTMLDivElement>((_, ref) => {\n  const { title, subTitle, tag, font, width, height, backgroundColor, fontColor } = useData();\n\n  return (\n    <BannerWrapper>\n      <BannerBackground\n        ref={ref}\n        style={{\n          width: Number(width),\n          height: Number(height),\n          fontFamily: font,\n          backgroundColor,\n          color: fontColor,\n        }}\n      >\n        <BannerText\n          style={{\n            fontSize: 55,\n            borderBottom: subTitle ? `3px solid ${fontColor}` : 'none',\n            fontWeight: 'bold',\n          }}\n        >\n          {title}\n        </BannerText>\n        {subTitle && <BannerText style={{ fontSize: 25, marginTop: 10 }}>{subTitle}</BannerText>}\n        {tag && <BannerText style={{ fontSize: 15, position: 'absolute', bottom: 40 }}>{tag}</BannerText>}\n      </BannerBackground>\n    </BannerWrapper>\n  );\n});\nPreview.displayName = 'Preview';\n\nexport default Preview;\n","import React, { ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\nexport interface IBoxWrapperProps {\n  children: ReactElement | ReactElement[];\n  name?: string;\n  direction?: string;\n}\n\nconst StyledDivWrapper = styled.div<IBoxWrapperProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 650px;\n  padding: 5px;\n  background: transparent;\n  margin: 8px 0;\n`;\n\nconst BoxWrapper = ({ children, name, ...rest }: IBoxWrapperProps): ReactElement => {\n  return (\n    <StyledDivWrapper id={name} {...rest}>\n      {children}\n    </StyledDivWrapper>\n  );\n};\n\nexport default BoxWrapper;\n","import React, { ReactElement, useState } from 'react';\nimport { CompactPicker, ColorChangeHandler } from 'react-color';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  box-sizing: border-box;\n  width: 100px;\n  height: 20px;\n  border: 0.5px solid black;\n  border-radius: 2px;\n`;\nconst StyledInnerDiv = styled.div`\n  border: 0.1px solid lightgrey;\n  box-sizing: border-box;\n  height: 100%;\n`;\n\nconst StyledPopoverDiv = styled.div`\n  margin-top: 40px;\n  position: absolute;\n  z-index: 2;\n`;\nconst StyledCoverDiv = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n`;\n\nexport interface IColorPickerProps {\n  name: string;\n  onChange: ColorChangeHandler;\n  color: string;\n}\n\nconst ColorPicker = ({ name, color, onChange }: IColorPickerProps): ReactElement => {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  return (\n    <>\n      <StyledDiv\n        id={name}\n        onClick={() => {\n          setIsVisible(true);\n        }}\n      >\n        <StyledInnerDiv style={{ backgroundColor: color }}></StyledInnerDiv>\n      </StyledDiv>\n      {isVisible ? (\n        <>\n          <StyledPopoverDiv>\n            <StyledCoverDiv\n              onClick={() => {\n                setIsVisible(false);\n              }}\n            ></StyledCoverDiv>\n            <CompactPicker color={color} onChange={onChange}></CompactPicker>\n          </StyledPopoverDiv>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default ColorPicker;\n","import React, { memo, ReactNode, ReactElement, LabelHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\ninterface ILabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n  children: ReactNode;\n}\n\nconst StyledLabel = styled.label`\n  background: transparent;\n  color: #4f9da6;\n  font-size: 15px;\n  font-weight: bold;\n`;\n\nconst Label = ({ children, ...rest }: ILabelProps): ReactElement => {\n  return <StyledLabel {...rest}>{children}</StyledLabel>;\n};\n\nexport default memo(Label);\n","import React, { ReactElement } from 'react';\nimport { ColorChangeHandler } from 'react-color';\n\nimport ColorPicker from '@atoms/ColorPicker';\nimport Label from '@atoms/Label';\nimport styled from '@emotion/styled';\n\ninterface ILabeledInputProps {\n  name: string;\n  onChange: ColorChangeHandler;\n  color: string;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LabeledInput = ({ name, color, onChange }: ILabeledInputProps): ReactElement => {\n  return (\n    <StyledDiv>\n      <Label htmlFor={name}>{name}</Label>\n      <ColorPicker color={color} name={name} onChange={onChange}></ColorPicker>\n    </StyledDiv>\n  );\n};\n\nexport default LabeledInput;\n","import React, { ReactElement, ReactEventHandler, SelectHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport type TOption = { label: string | number; value: string | number };\nexport type TOptions = TOption[];\n\nexport interface ISelectorProps extends SelectHTMLAttributes<HTMLSelectElement> {\n  options: TOptions;\n  value: string;\n  onChange: ReactEventHandler;\n}\n\nconst StyledSelect = styled.select`\n  width: 100px;\n  background: transparent;\n  color: #facf5a;\n\n  -o-appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n`;\nconst StyledOption = styled.option``;\n\nconst Selector = ({ options, ...rest }: ISelectorProps): ReactElement => {\n  return (\n    <StyledSelect {...rest}>\n      {options.map(({ label, value }: TOption) => {\n        return (\n          <StyledOption key={label} value={value}>\n            {label}\n          </StyledOption>\n        );\n      })}\n    </StyledSelect>\n  );\n};\n\nexport default Selector;\n","import React, { ReactElement, ReactEventHandler } from 'react';\n\nimport Label from '@atoms/Label';\nimport { TOptions } from '@atoms/Selector';\nimport Selector from '@atoms/Selector';\nimport styled from '@emotion/styled';\ninterface ILabeledInputProps {\n  name: string;\n  options: TOptions;\n  value: string;\n  onChange: ReactEventHandler;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: black;\n  margin: 5px 0;\n`;\nconst LabeledSelector = ({ name, options, value, onChange }: ILabeledInputProps): ReactElement => {\n  return (\n    <StyledDiv>\n      <Label htmlFor={name}>{name}</Label>\n      <Selector id={name} value={value} onChange={onChange} options={options}></Selector>\n    </StyledDiv>\n  );\n};\n\nexport default LabeledSelector;\n","import { TOptions } from '@atoms/Selector';\n\nexport const fontGenerator = (): TOptions => {\n  return [\n    { label: 'Noto-sans', value: 'Noto-sans' },\n    { label: '고운돋움', value: 'GowunDodum-Regular' },\n    { label: 'G마켓 Sans M', value: 'GmarketSansMedium' },\n    { label: '여기어때 잘난체', value: 'yg-jalnan' },\n    { label: '리디 바탕', value: 'RIDIBatang' },\n    { label: '배민 한나체', value: 'BMHANNAPro' },\n    { label: '원스토어 고딕', value: 'ONE-Mobile-Title' },\n    { label: '나눔 바른펜', value: 'NanumBarunpen' },\n    { label: '한글 누리체', value: 'HangeulNuri-Bold' },\n  ];\n};\n\nexport const widthGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 600; i <= 1000; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\nexport const heightGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 250; i <= 400; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n","import React, { ReactElement } from 'react';\n\nimport BoxWrapper from '@atoms/BoxWrapper';\nimport { useData } from '@hooks/useData';\nimport LabeledColorPicker from '@molecules/LabeledColorPicker';\nimport LabeledSelector from '@molecules/LabeledSelector';\nimport { widthGenerator, heightGenerator } from '@utils/data';\nconst BackgroundBox = (): ReactElement => {\n  const { height, width, onHeightChange, onWidthChange, backgroundColor, onBackgroundColorChange } = useData();\n  return (\n    <BoxWrapper name=\"Background\">\n      <LabeledColorPicker name=\"배경색\" color={backgroundColor} onChange={onBackgroundColorChange}></LabeledColorPicker>\n      <LabeledSelector options={widthGenerator()} value={width} onChange={onWidthChange} name=\"배경 넓이\"></LabeledSelector>\n      <LabeledSelector options={heightGenerator()} value={height} onChange={onHeightChange} name=\"배경 높이\"></LabeledSelector>\n    </BoxWrapper>\n  );\n};\n\nexport default BackgroundBox;\n","import React, { ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface IWrapperBoxProps {\n  children: ReactElement | ReactElement[];\n}\n\nconst StyledDivWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst WrapperBox = ({ children }: IWrapperBoxProps): ReactElement => {\n  return <StyledDivWrapper>{children}</StyledDivWrapper>;\n};\n\nexport default WrapperBox;\n","import React, { InputHTMLAttributes, ReactElement, ReactEventHandler, HTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface IInputProp extends HTMLAttributes<HTMLInputElement> {\n  onChange: ReactEventHandler;\n}\n\ntype TStyledInputProp = InputHTMLAttributes<Element>;\n\nconst StyledInput = styled.input<TStyledInputProp>`\n  border: none;\n  text-align: center;\n  background: transparent;\n  color: #ff5959;\n\n  border-bottom: 1px solid #facf5a;\n  width: 200px;\n  :focus {\n    outline: none;\n    caret-color: #5ec59a;\n    ::placeholder {\n      visibility: hidden;\n    }\n  }\n`;\n\nconst Input = (props: IInputProp): ReactElement => {\n  return <StyledInput {...props} />;\n};\n\nexport default Input;\n","import React, { ReactElement, ReactEventHandler } from 'react';\n\nimport Input from '@atoms/Input';\nimport Label from '@atoms/Label';\nimport styled from '@emotion/styled';\n\ninterface ILabeledInputProps {\n  name: string;\n  placeholder: string;\n  type: 'text' | 'number';\n  value: string;\n  onChange: ReactEventHandler;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  margin: 5px 0;\n  width: 300px;\n  justify-content: space-between;\n`;\nconst LabeledInput = ({ name, ...rest }: ILabeledInputProps): ReactElement => {\n  return (\n    <StyledDiv>\n      <Label htmlFor={name}>{name}</Label>\n      <Input id={name} {...rest}></Input>\n    </StyledDiv>\n  );\n};\n\nexport default LabeledInput;\n","import React, { ReactElement } from 'react';\n\nimport BoxWrapper from '@atoms/BoxWrapper';\nimport SubWrapper from '@atoms/SubWrapper';\nimport { useData } from '@hooks/useData';\nimport LabeledColorPicker from '@molecules/LabeledColorPicker';\nimport LabeledInput from '@molecules/LabeledInput';\nimport LabeledSelector from '@molecules/LabeledSelector';\nimport { fontGenerator } from '@utils/data';\n\nconst InputBox = (): ReactElement => {\n  const { title, subTitle, tag, font, onFontChange, onTitleChange, onSubTitleChange, onTagChange, fontColor, onFontColorChange } =\n    useData();\n  return (\n    <BoxWrapper>\n      <SubWrapper>\n        <LabeledInput\n          name=\"제목\"\n          type=\"text\"\n          value={title}\n          onChange={onTitleChange}\n          placeholder=\"제목을 입력하세요\"\n        ></LabeledInput>\n        <LabeledInput\n          value={subTitle}\n          onChange={onSubTitleChange}\n          name=\"부제목\"\n          type=\"text\"\n          placeholder=\"부제목을 입력하세요\"\n        ></LabeledInput>\n        <LabeledInput value={tag} onChange={onTagChange} name=\"태그\" type=\"text\" placeholder=\"태그를 입력하세요\"></LabeledInput>\n      </SubWrapper>\n      <SubWrapper>\n        <LabeledSelector name=\"폰트\" value={font} onChange={onFontChange} options={fontGenerator()}></LabeledSelector>\n        <LabeledColorPicker color={fontColor} onChange={onFontColorChange} name=\"폰트색\"></LabeledColorPicker>\n      </SubWrapper>\n    </BoxWrapper>\n  );\n};\n\nexport default InputBox;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype TModalWrapper = {\n  children: ReactElement;\n  display: boolean;\n};\n\nconst handleDisplay = ({ display }: TModalWrapper) => {\n  switch (display) {\n    case true:\n      return css`\n        display: block;\n      `;\n    case false:\n      return css`\n        display: none;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledDiv = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background: rgba(204, 204, 204);\n  ${handleDisplay}\n`;\n\nconst ModalWrapper = ({ children, display }: TModalWrapper): ReactElement => {\n  return <StyledDiv display={display}>{children}</StyledDiv>;\n};\n\nexport default ModalWrapper;\n","import React, { ReactElement, useLayoutEffect, useRef } from 'react';\n\nimport BannerWrapper from '@atoms/BannerWrapper';\nimport Button from '@atoms/Button';\nimport ButtonWrapper from '@atoms/ButtonWrapper';\nimport { Layout } from '@atoms/Layout';\nimport ModalWrapper from '@atoms/ModalWrapper';\nimport { useData } from '@hooks/useData';\n\ntype TPreviewProps = {\n  visible: boolean;\n  onClosePreview: () => void;\n  capturedResult?: HTMLCanvasElement;\n};\n\nconst Preview = ({ visible, onClosePreview, capturedResult }: TPreviewProps): ReactElement => {\n  const previewRef = useRef<HTMLDivElement>(null);\n  const { title } = useData();\n  const onClickClose = () => {\n    if (previewRef.current) {\n      previewRef.current.innerHTML = '';\n    }\n    onClosePreview();\n  };\n\n  const onClickDownload = () => {\n    const link = document.createElement('a');\n    const underbarTitle = title.replaceAll(/(\\s)+/g, '_');\n    link.download = `${underbarTitle}.png`;\n    link.href = capturedResult?.toDataURL() ?? '';\n    link.click();\n    onClickClose();\n  };\n\n  useLayoutEffect(() => {\n    if (capturedResult) {\n      if (previewRef.current) {\n        previewRef.current.appendChild(capturedResult);\n      }\n    }\n  }, [capturedResult]);\n\n  return (\n    <>\n      <ModalWrapper display={visible}>\n        <Layout>\n          <BannerWrapper ref={previewRef} />\n          <ButtonWrapper>\n            <Button text=\"닫기\" onClick={onClickClose} style={{ width: 100, zIndex: 1 }}></Button>\n            <Button text=\"다운로드\" onClick={onClickDownload} style={{ width: 100, zIndex: 1 }}></Button>\n          </ButtonWrapper>\n        </Layout>\n      </ModalWrapper>\n    </>\n  );\n};\n\nexport default Preview;\n","import React, { ReactElement, useState, useRef } from 'react';\n\nimport Button from '@atoms/Button';\nimport ButtonWrapper from '@atoms/ButtonWrapper';\nimport Header from '@atoms/Header';\nimport { Layout } from '@atoms/Layout';\nimport { Provider } from '@hooks/useData';\nimport Banner from '@molecules/Banner';\nimport BackgroundBox from '@organisms/BackgroundBox';\nimport InputBox from '@organisms/InputBox';\nimport Preview from '@organisms/Preview';\nimport capture from 'html2canvas';\nconst App = (): ReactElement => {\n  const [visible, setVisible] = useState(false);\n  const [capturedResult, setCapturedResult] = useState<HTMLCanvasElement>();\n  const bannerRef = useRef<HTMLDivElement>(null);\n\n  const onClosePreview = () => {\n    setVisible(false);\n  };\n\n  const captureImage = async () => {\n    if (bannerRef.current) {\n      const result = await capture(bannerRef.current);\n      if (result) {\n        setCapturedResult(result);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Layout>\n        <Provider>\n          <Banner ref={bannerRef}></Banner>\n          <InputBox></InputBox>\n          <BackgroundBox />\n          <Preview capturedResult={capturedResult} visible={visible} onClosePreview={onClosePreview}></Preview>\n        </Provider>\n        <ButtonWrapper>\n          <Button\n            text=\"미리보기\"\n            onClick={() => {\n              setVisible(true);\n              captureImage();\n            }}\n          ></Button>\n        </ButtonWrapper>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GlobalStyles from '@utils/global-styles';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}