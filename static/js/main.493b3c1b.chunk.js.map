{"version":3,"sources":["hooks/useColor.ts","hooks/useInput.ts","hooks/useData.tsx","utils/global-styles.tsx","components/atoms/Button.tsx","components/atoms/Layout.tsx","components/atoms/Wrapper.tsx","components/atoms/BannerBackground.tsx","components/atoms/BannerText.tsx","components/molecules/Banner.tsx","components/atoms/Divider.tsx","components/atoms/GithubIcon.tsx","components/molecules/Header.tsx","components/atoms/ColorPicker.tsx","components/atoms/Label.tsx","components/molecules/LabeledColorPicker.tsx","components/organisms/BackgroundBox.tsx","components/atoms/Input.tsx","components/molecules/LabeledInput.tsx","components/organisms/InputBox.tsx","components/atoms/SlidingModal.tsx","components/atoms/Selector.tsx","components/molecules/LabeledSelector.tsx","utils/data.ts","components/organisms/SlidingMenu.tsx","App.tsx","index.tsx"],"names":["useInput","initialState","useState","value","setValue","useCallback","color","hex","initialValue","e","Number","target","dataContext","createContext","title","subTitle","tag","height","width","font","fontColor","backgroundColor","titleFontSize","subTitleFontSize","tagFontSize","onTitleChange","console","log","onSubTitleChange","onTagChange","onWidthChange","onHeightChange","onFontChange","onFontColorChange","onBackgroundColorChange","onTitleFontSizeChange","onSubTitleFontSizeChange","onTagFontSizeChange","Provider","children","useColor","useData","useContext","fonts","css","GlobalStyles","styles","StyledButton","styled","button","Button","text","onClick","rest","StyledDiv","div","Layout","wrapperType","Wrapper","forwardRef","ref","displayName","BannerBackground","BannerText","Preview","_","style","fontFamily","fontSize","borderBottom","fontWeight","marginTop","position","bottom","dividerType","Divider","props","GithubIcon","xmlns","viewBox","d","Header","zIndex","href","rel","StyledInnerDiv","StyledPopoverDiv","StyledCoverDiv","ColorPicker","name","onChange","pickerPosition","isVisible","setIsVisible","id","StyledLabel","label","Label","memo","LabeledColorPicker","htmlFor","BackgroundBox","StyledInput","input","Input","LabeledInput","InputBox","type","placeholder","visible","SlidingModalInnerWrapper","SlidingModal","StyledSelect","select","StyledOption","option","Selector","options","map","LabeledSelector","widthGenerator","result","i","push","heightGenerator","fontSizeGenerator","fontType","diffSize","getDiffSize","App","bannerRef","useRef","setVisible","captureImage","a","current","capture","link","document","createElement","underbarTitle","replaceAll","download","toDataURL","click","Banner","SlidingMenu","ReactDOM","render","StrictMode","getElementById"],"mappings":"oLAYeA,EAVE,SAACC,GAChB,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAMA,MAAO,CAACD,EAJcE,uBAAY,SAACC,GACjCF,EAASE,EAAMC,OACd,MCeUP,I,sBAAAA,EApBf,SAA0CQ,GACxC,MAA0BN,mBAAcM,GAAxC,mBAAOL,EAAP,KAAcC,EAAd,KAgBA,MAAO,CAACD,EAdcE,uBACpB,SAACI,GACC,cAAeD,GACb,IAAK,SACHJ,EAASM,OAAOD,EAAEE,OAAOR,QACzB,MACF,IAAK,SACHC,EAASK,EAAEE,OAAOR,UAIxB,CAACK,M,OCkBCI,EAAcC,wBAAwB,CAC1CC,MAAO,GACPC,SAAU,GACVC,IAAK,GACLC,OAAQ,EACRC,MAAO,EACPC,KAAM,GACNC,UAAW,GACXC,gBAAiB,GACjBC,cAAe,EACfC,iBAAkB,EAClBC,YAAa,EACbC,cAAe,SAAChB,GACdiB,QAAQC,IAAIlB,IAEdmB,iBAAkB,SAACnB,GACjBiB,QAAQC,IAAIlB,IAEdoB,YAAa,SAACpB,GACZiB,QAAQC,IAAIlB,IAEdqB,cAAe,SAACrB,GACdiB,QAAQC,IAAIlB,IAEdsB,eAAgB,SAACtB,GACfiB,QAAQC,IAAIlB,IAEduB,aAAc,SAACvB,GACbiB,QAAQC,IAAIlB,IAEdwB,kBAAmB,SAAC3B,GAClBoB,QAAQC,IAAIrB,IAEd4B,wBAAyB,SAAC5B,GACxBoB,QAAQC,IAAIrB,IAEd6B,sBAAuB,SAAC1B,GACtBiB,QAAQC,IAAIlB,IAEd2B,yBAA0B,SAAC3B,GACzBiB,QAAQC,IAAIlB,IAEd4B,oBAAqB,SAAC5B,GACpBiB,QAAQC,IAAIlB,MAIH6B,EAAW,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SACzB,EAA+BvC,EAAS,IAAxC,mBAAOc,EAAP,KAAcW,EAAd,KACA,EAAqCzB,EAAS,IAA9C,mBAAOe,EAAP,KAAiBa,EAAjB,KACA,EAA2B5B,EAAS,IAApC,mBAAOgB,EAAP,KAAYa,EAAZ,KACA,EAAiC7B,EAAS,KAA1C,mBAAOiB,EAAP,KAAec,EAAf,KACA,EAA+B/B,EAAS,KAAxC,mBAAOkB,EAAP,KAAcY,EAAd,KACA,EAA6B9B,EAAS,aAAtC,mBAAOmB,EAAP,KAAaa,EAAb,KACA,EAAmDQ,EAAS,WAA5D,mBAAOnB,EAAP,KAAwBa,EAAxB,KACA,EAAuCM,EAAS,WAAhD,mBAAOpB,EAAP,KAAkBa,EAAlB,KACA,EAA+CjC,EAAS,IAAxD,mBAAOsB,EAAP,KAAsBa,EAAtB,KACA,EAAqDnC,EAAS,IAA9D,mBAAOuB,EAAP,KAAyBa,EAAzB,KACA,EAA2CpC,EAAS,IAApD,mBAEMG,EAAQ,CACZW,QACAC,WACAC,MACAE,QACAD,SACAE,OACAC,YACAC,kBACAC,gBACAC,mBACAC,YAbF,KAcEC,gBACAG,mBACAC,cACAE,iBACAD,gBACAE,eACAE,0BACAD,oBACAE,wBACAC,2BACAC,oBAxBF,MA2BA,OAAO,cAACzB,EAAY0B,SAAb,CAAsBnC,MAAOA,EAA7B,SAAqCoC,KAGjCE,EAAU,kBAAgBC,qBAAW9B,I,cCtH5C+B,EAAQC,YAAH,o5EA+FIC,EA1BM,WACnB,OACE,cAAC,IAAD,CACEC,OAAQF,YAAF,ikBACFD,M,mECnEJI,EAAeC,IAAOC,OAAV,upBA4CHC,EARA,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAAYC,EAAuC,iBACzE,OACE,cAACN,EAAD,yBAAcK,QAASA,GAAaC,GAApC,aACGF,M,eCxCDG,EAAYN,IAAOO,IAAV,qNAWFC,EAAS,SAAC,GAAuD,IAArDjB,EAAoD,EAApDA,SAAac,EAAuC,iBAC3E,OAAO,cAACC,EAAD,2BAAeD,GAAf,aAAsBd,M,eC4BzBe,EAAYN,IAAOO,IAAV,wEArCW,SAAC,GACzB,OAD4D,EAAjCE,aAEzB,IAAK,MACH,OAAOb,YAAP,gIAKF,IAAK,SACH,OAAOA,YAAP,sKAMF,IAAK,MACH,OAAOA,YAAP,0IAKF,IAAK,SACH,OAAOA,YAAP,0HAKF,IAAK,QACH,OAAOA,YAAP,2FAIF,QACE,OAAOA,YAAP,8BAUAc,EAAUC,sBAA0C,WAAuCC,GAAuB,IAA3DrB,EAA0D,EAA1DA,SAAac,EAA6C,iBACrH,OACE,cAAC,EAAD,yBAAWO,IAAKA,GAASP,GAAzB,aACGd,QAKPmB,EAAQG,YAAc,UAEPH,I,EAAAA,I,eC7DTJ,EAAYN,IAAOO,IAAV,6LAcTO,EAAmBH,sBACvB,WAA2CC,GAAuB,IAA/DrB,EAA8D,EAA9DA,SAAac,EAAiD,iBAC/D,OACE,cAAC,EAAD,yBAAWO,IAAKA,GAASP,GAAzB,aACGd,QAMTuB,EAAiBD,YAAc,mBAEhBC,I,EAAAA,I,eC1BTR,EAAYN,IAAOO,IAAV,4HAgBAQ,EAJI,SAAC,GAAsD,IAApDxB,EAAmD,EAAnDA,SAAac,EAAsC,iBACvE,OAAO,cAAC,EAAD,2BAAeA,GAAf,aAAsBd,MCVzByB,GAAUL,sBAA2B,SAACM,EAAGL,GAC7C,MACEnB,IADM3B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,IAAKG,EAA9B,EAA8BA,KAAMD,EAApC,EAAoCA,MAAOD,EAA3C,EAA2CA,OAAQI,EAAnD,EAAmDA,gBAAiBD,EAApE,EAAoEA,UAAWE,EAA/E,EAA+EA,cAAeC,EAA9F,EAA8FA,iBAAkBC,EAAhH,EAAgHA,YAGhH,OACE,cAAC,EAAD,CAASiC,YAAY,SAArB,SACE,eAAC,EAAD,CACEG,IAAKA,EACLM,MAAO,CACLhD,MAAOR,OAAOQ,GACdD,OAAQP,OAAOO,GACfkD,WAAYhD,EACZE,kBACAf,MAAOc,GAPX,UAUE,cAAC,EAAD,CACE8C,MAAO,CACLE,SAAU1D,OAAOY,GACjB+C,aAActD,EAAQ,oBAAgBK,GAAc,OACpDkD,WAAY,QAJhB,SAOGxD,IAEFC,GAAY,cAAC,EAAD,CAAYmD,MAAO,CAAEE,SAAU1D,OAAOa,GAAmBgD,UAAW,IAApE,SAA2ExD,IACvFC,GAAO,cAAC,EAAD,CAAYkD,MAAO,CAAEE,SAAU1D,OAAOc,GAAcgD,SAAU,WAAYC,OAAQ,IAAlF,SAAyFzD,YAKzGgD,GAAQH,YAAc,UAEPG,I,+DAAAA,MCVTV,GAAYN,IAAOO,IAAV,qCAnBW,SAAC,GACzB,OAD4D,EAAjCmB,aAEzB,IAAK,WACH,OAAO9B,YAAP,kKAMF,IAAK,WACH,OAAOA,YAAP,qKAiBS+B,GAJC,SAACC,GACf,OAAO,cAAC,GAAD,eAAeA,KCzBTC,GARI,WACjB,OACE,qBAAKC,MAAM,6BAA6B5D,MAAM,KAAKD,OAAO,KAAK8D,QAAQ,YAAvE,SACE,sBAAMC,EAAE,itBCCR1B,GAAYN,IAAOO,IAAV,2RA2BA0B,GAZA,WACb,OACE,eAAC,GAAD,CAAWf,MAAO,CAAEgB,OAAQ,IAA5B,UACE,mBAAGC,KAAK,iDAAiDrE,MAAM,OAAOH,OAAO,SAASyE,IAAI,aAA1F,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAASV,YAAY,aACrB,kD,SCdApB,GAAYN,IAAOO,IAAV,2KAST8B,GAAiBrC,IAAOO,IAAV,+CAqBd+B,GAAmBtC,IAAOO,IAAV,8EAjBO,SAAC,GAC5B,OADgF,EAAlDiB,UAE5B,IAAK,MACH,OAAO5B,YAAP,kFAIF,IAAK,OACH,OAAOA,YAAP,oFAIF,QACE,OAAOA,YAAP,gCAUA2C,GAAiBvC,IAAOO,IAAV,4GAqCLiC,GA7BK,SAAC,GAA2F,IAAzFC,EAAwF,EAAxFA,KAAMnF,EAAkF,EAAlFA,MAAOoF,EAA2E,EAA3EA,SAA2E,IAAjEC,sBAAiE,MAAhD,SAAgD,EAC7G,EAAkCzF,oBAAkB,GAApD,mBAAO0F,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAK3B,MAAO,CAAEM,SAAU,YAAxB,UACE,cAAC,GAAD,CACEsB,GAAIL,EACJrC,QAAS,WACPyC,GAAa,IAHjB,SAME,cAACR,GAAD,CAAgBnB,MAAO,CAAE7C,gBAAiBf,OAE3CsF,EACC,mCACE,eAACN,GAAD,CAAkBd,SAAUmB,EAA5B,UACE,cAACJ,GAAD,CACEnC,QAAS,WACPyC,GAAa,MAGjB,cAAC,KAAD,CAAcvF,MAAOA,EAAOoF,SAAUA,SAGxC,S,gBC1EJK,GAAc/C,IAAOgD,MAAV,+IAQXC,GAAQ,SAAC,GAAsD,IAApD1D,EAAmD,EAAnDA,SAAac,EAAsC,kBAClE,OAAO,cAAC0C,GAAD,2BAAiB1C,GAAjB,aAAwBd,MAGlB2D,kBAAKD,I,+BCHLE,GATY,SAAC,GAA0E,IAAxEV,EAAuE,EAAvEA,KAAMnF,EAAiE,EAAjEA,MAAOoF,EAA0D,EAA1DA,SAAarC,EAA6C,kBACnG,OACE,eAAC,EAAD,CAASI,YAAY,QAArB,UACE,cAAC,GAAD,CAAO2C,QAASX,EAAhB,SAAuBA,IACvB,cAAC,GAAD,aAAanF,MAAOA,EAAOmF,KAAMA,EAAMC,SAAUA,GAAcrC,QCStDgD,GAfO,WACpB,MAAmF5D,IAA3EpB,EAAR,EAAQA,gBAAiBa,EAAzB,EAAyBA,wBAAyBd,EAAlD,EAAkDA,UAAWa,EAA7D,EAA6DA,kBAC7D,OACE,eAAC,EAAD,CAASwB,YAAY,MAArB,UACE,cAAC,GAAD,CAAoBkC,eAAe,MAAMrF,MAAOc,EAAWsE,SAAUzD,EAAmBwD,KAAK,uBAC7F,cAAC,GAAD,CACEA,KAAK,qBACLE,eAAe,MACfrF,MAAOe,EACPqE,SAAUxD,QCLZoE,GAActD,IAAOuD,MAAV,sUAsBFC,GAJD,SAAC5B,GACb,OAAO,cAAC0B,GAAD,eAAiB1B,K,YCfpBtB,GAAYN,IAAOO,IAAV,+HAgBAkD,GATM,SAAC,GAAyD,IAAvDhB,EAAsD,EAAtDA,KAASpC,EAA6C,kBAC5E,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAO+C,QAASX,EAAhB,SAAuBA,IACvB,cAAC,GAAD,aAAOK,GAAIL,GAAUpC,QCFZqD,GAjBE,WACf,MAA+EjE,IAAvE3B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,IAAKS,EAA9B,EAA8BA,cAAeG,EAA7C,EAA6CA,iBAAkBC,EAA/D,EAA+DA,YAC/D,OACE,eAAC,EAAD,CAAS4B,YAAY,MAArB,UACE,cAAC,GAAD,CAAcgC,KAAK,eAAKkB,KAAK,OAAOxG,MAAOW,EAAO4E,SAAUjE,EAAemF,YAAY,sDACvF,cAAC,GAAD,CACEzG,MAAOY,EACP2E,SAAU9D,EACV6D,KAAK,qBACLkB,KAAK,OACLC,YAAY,4DAEd,cAAC,GAAD,CAAczG,MAAOa,EAAK0E,SAAU7D,EAAa4D,KAAK,eAAKkB,KAAK,OAAOC,YAAY,0D,gBCYnFtD,GAAYN,IAAOO,IAAV,yLApBO,SAAC,GACrB,OADyD,EAAlCsD,SAErB,KAAK,EACH,OAAOjE,YAAP,gFAIF,KAAK,EACH,OAAOA,YAAP,gIAOF,QACE,OAAOA,YAAP,gCAiBAkE,GAA2B9D,IAAOO,IAAV,gDAYfwD,GARM,SAAC,GAA6D,IAA3DxE,EAA0D,EAA1DA,SAAac,EAA6C,kBAChF,OACE,cAAC,GAAD,2BAAeA,GAAf,aACE,eAACyD,GAAD,eAA4BvE,S,eCrC5ByE,GAAehE,IAAOiE,OAAV,gUAiBZC,GAAelE,IAAOmE,OAAV,4BAgBHC,GAdE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,QAAYhE,EAAyC,kBACvE,OACE,cAAC2D,GAAD,2BAAkB3D,GAAlB,aACGgE,EAAQC,KAAI,YAAgC,IAA7BtB,EAA4B,EAA5BA,MAAO7F,EAAqB,EAArBA,MACrB,OACE,cAAC+G,GAAD,CAA0B/G,MAAOA,EAAjC,SACG6F,GADgBA,UCdduB,GATS,SAAC,GAA0E,IAAxE9B,EAAuE,EAAvEA,KAAM4B,EAAiE,EAAjEA,QAASlH,EAAwD,EAAxDA,MAAOuF,EAAiD,EAAjDA,SAC/C,OACE,eAAC,EAAD,CAASjC,YAAY,QAArB,UACE,cAAC,GAAD,CAAO2C,QAASX,EAAhB,SAAuBA,IACvB,cAAC,GAAD,CAAUK,GAAIL,EAAMtF,MAAOA,EAAOuF,SAAUA,EAAU2B,QAASA,QCFxDG,GAAiB,WAE5B,IADA,IAAMC,EAAS,GACNC,EAAI,IAAKA,GAAK,IAAMA,GAAK,GAChCD,EAAOE,KAAK,CACV3B,MAAO0B,EACPvH,MAAOuH,IAGX,OAAOD,GAGIG,GAAkB,WAE7B,IADA,IAAMH,EAAS,GACNC,EAAI,IAAKA,GAAK,IAAKA,GAAK,GAC/BD,EAAOE,KAAK,CACV3B,MAAO0B,EACPvH,MAAOuH,IAGX,OAAOD,GAKII,GAAoB,SAACC,GAchC,IAbA,IAWMC,EAXc,SAACpB,GACnB,OAAQA,GACN,IAAK,QACH,OAAO,EACT,IAAK,WAEL,IAAK,MACH,OAAO,IAIIqB,CAAYF,GACvBL,EAAS,GACNC,EAAI,GAAKK,EAAUL,GAAK,GAAKK,EAAUL,GAAK,EACnDD,EAAOE,KAAK,CACV3B,MAAO0B,EACPvH,MAAOuH,IAGX,OAAOD,GCLMf,GA5CE,SAAC,GAAkD,IAAhDG,EAA+C,EAA/CA,QAClB,EAaIpE,IAZFvB,EADF,EACEA,MACAD,EAFF,EAEEA,OACAE,EAHF,EAGEA,KACAa,EAJF,EAIEA,aACAF,EALF,EAKEA,cACAC,EANF,EAMEA,eACAT,EAPF,EAOEA,cACAC,EARF,EAQEA,iBACAC,EATF,EASEA,YACAW,EAVF,EAUEA,sBACAC,EAXF,EAWEA,yBACAC,EAZF,EAYEA,oBAEF,OACE,eAAC,GAAD,CAAcwE,QAASA,EAAvB,UACE,cAAC,GAAD,CAAiBpB,KAAK,eAAKtF,MAAOgB,EAAMuE,SAAU1D,EAAcqF,QDzB7D,CACL,CAAErB,MAAO,YAAa7F,MAAO,aAC7B,CAAE6F,MAAO,2BAAQ7F,MAAO,sBACxB,CAAE6F,MAAO,uBAAc7F,MAAO,qBAC9B,CAAE6F,MAAO,8CAAY7F,MAAO,aAC5B,CAAE6F,MAAO,4BAAS7F,MAAO,cACzB,CAAE6F,MAAO,kCAAU7F,MAAO,cAC1B,CAAE6F,MAAO,wCAAW7F,MAAO,oBAC3B,CAAE6F,MAAO,kCAAU7F,MAAO,iBAC1B,CAAE6F,MAAO,kCAAU7F,MAAO,uBCiBxB,cAAC,GAAD,CAASuE,YAAY,aACrB,cAAC,GAAD,CACEe,KAAK,eACLtF,MAAOmB,EACPoE,SAAUvD,EACVkF,QAASQ,GAAkB,WAE7B,cAAC,GAAD,CACEpC,KAAK,qBACLtF,MAAOoB,EACPmE,SAAUtD,EACViF,QAASQ,GAAkB,cAE7B,cAAC,GAAD,CACEpC,KAAK,eACLtF,MAAOqB,EACPkE,SAAUrD,EACVgF,QAASQ,GAAkB,SAE7B,cAAC,GAAD,CAASnD,YAAY,aACrB,cAAC,GAAD,CAAiB2C,QAASG,KAAkBrH,MAAOe,EAAOwE,SAAU5D,EAAe2D,KAAK,8BACxF,cAAC,GAAD,CAAiB4B,QAASO,KAAmBzH,MAAOc,EAAQyE,SAAU3D,EAAgB0D,KAAK,kC,oBCQlFwC,GA7CH,WACV,IAAMC,EAAYC,iBAAuB,MACzC,EAA8BjI,oBAAS,GAAvC,mBAAO2G,EAAP,KAAgBuB,EAAhB,KACQtH,EAAU2B,IAAV3B,MAEFuH,EAAY,uCAAG,kCAAAC,EAAA,0DACfJ,EAAUK,QADK,gCAEIC,KAAQN,EAAUK,SAFtB,QAEXd,EAFW,UAITgB,EAAOC,SAASC,cAAc,KAC9BC,EAAgB9H,EAAM+H,WAAW,SAAU,KACjDJ,EAAKK,SAAL,UAAmBF,EAAnB,QACAH,EAAKtD,KAAL,iBAAYsC,QAAZ,IAAYA,OAAZ,EAAYA,EAAQsB,mBAApB,QAAmC,GACnCN,EAAKO,SARU,2CAAH,qDAalB,OACE,qCACE,cAAC,GAAD,IACA,eAAC,EAAD,WACE,cAACC,GAAD,CAAQrF,IAAKsE,IACb,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,EAAD,CAASzE,YAAY,SAArB,UACE,cAAC,EAAD,CACEN,KAAI,oCAAW0D,EAAU,eAAO,gBAChCzD,QAAS,WACPgF,GAAYvB,MAGhB,cAAC,EAAD,CACE1D,KAAK,2BACLC,QAAS,WACPiF,UAIN,cAACa,GAAD,CAAarC,QAASA,WC5C9BsC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,GAAD,SAGJX,SAASY,eAAe,W","file":"static/js/main.493b3c1b.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\nimport { ColorChangeHandler } from 'react-color';\nconst useInput = (initialState: string): [string, ColorChangeHandler] => {\n  const [value, setValue] = useState(initialState);\n\n  const onColorChange = useCallback((color) => {\n    setValue(color.hex);\n  }, []);\n\n  return [value, onColorChange];\n};\n\nexport default useInput;\n","import { ChangeEvent, ReactEventHandler, useState, useCallback } from 'react';\n\nfunction useInput<Type = string | number>(initialValue: Type): [Type, ReactEventHandler] {\n  const [value, setValue] = useState<any>(initialValue);\n\n  const onInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      switch (typeof initialValue) {\n        case 'number':\n          setValue(Number(e.target.value));\n          break;\n        case 'string':\n          setValue(e.target.value);\n          break;\n      }\n    },\n    [initialValue],\n  );\n\n  return [value, onInputChange];\n}\n\nexport default useInput;\n","import React, { useContext, createContext, ReactElement, ReactEventHandler, ChangeEvent } from 'react';\nimport { ColorChangeHandler } from 'react-color';\n\nimport useColor from './useColor';\nimport useInput from './useInput';\nexport interface IProviderProps {\n  children: ReactElement;\n}\n\ninterface IContext {\n  title: string;\n  subTitle: string;\n  tag: string;\n  height: number;\n  width: number;\n  font: string;\n  backgroundColor: string;\n  fontColor: string;\n  titleFontSize: number;\n  subTitleFontSize: number;\n  tagFontSize: number;\n  onTitleChange: ReactEventHandler;\n  onSubTitleChange: ReactEventHandler;\n  onTagChange: ReactEventHandler;\n  onWidthChange: ReactEventHandler;\n  onHeightChange: ReactEventHandler;\n  onFontChange: ReactEventHandler;\n  onFontColorChange: ColorChangeHandler;\n  onBackgroundColorChange: ColorChangeHandler;\n  onTitleFontSizeChange: ReactEventHandler;\n  onSubTitleFontSizeChange: ReactEventHandler;\n  onTagFontSizeChange: ReactEventHandler;\n}\n\nconst dataContext = createContext<IContext>({\n  title: '',\n  subTitle: '',\n  tag: '',\n  height: 0,\n  width: 0,\n  font: '',\n  fontColor: '',\n  backgroundColor: '',\n  titleFontSize: 0,\n  subTitleFontSize: 0,\n  tagFontSize: 0,\n  onTitleChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onSubTitleChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onTagChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onWidthChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onHeightChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onFontChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onFontColorChange: (color) => {\n    console.log(color);\n  },\n  onBackgroundColorChange: (color) => {\n    console.log(color);\n  },\n  onTitleFontSizeChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onSubTitleFontSizeChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n  onTagFontSizeChange: (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n  },\n});\n\nexport const Provider = ({ children }: IProviderProps): ReactElement => {\n  const [title, onTitleChange] = useInput('');\n  const [subTitle, onSubTitleChange] = useInput('');\n  const [tag, onTagChange] = useInput('');\n  const [height, onHeightChange] = useInput(350);\n  const [width, onWidthChange] = useInput(700);\n  const [font, onFontChange] = useInput('Noto-sans');\n  const [backgroundColor, onBackgroundColorChange] = useColor('#E6CCA9');\n  const [fontColor, onFontColorChange] = useColor('#533535');\n  const [titleFontSize, onTitleFontSizeChange] = useInput(55);\n  const [subTitleFontSize, onSubTitleFontSizeChange] = useInput(25);\n  const [tagFontSize, onTagFontSizeChange] = useInput(15);\n\n  const value = {\n    title,\n    subTitle,\n    tag,\n    width,\n    height,\n    font,\n    fontColor,\n    backgroundColor,\n    titleFontSize,\n    subTitleFontSize,\n    tagFontSize,\n    onTitleChange,\n    onSubTitleChange,\n    onTagChange,\n    onHeightChange,\n    onWidthChange,\n    onFontChange,\n    onBackgroundColorChange,\n    onFontColorChange,\n    onTitleFontSizeChange,\n    onSubTitleFontSizeChange,\n    onTagFontSizeChange,\n  };\n\n  return <dataContext.Provider value={value}>{children}</dataContext.Provider>;\n};\n\nexport const useData = (): IContext => useContext(dataContext);\n","import React, { ReactElement } from 'react';\n\nimport { Global, css } from '@emotion/react';\n\nconst fonts = css`\n  @font-face {\n    font-family: 'GowunDodum-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2108@1.1/GowunDodum-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Square';\n    src: url('https://cdn.rawgit.com/moonspam/NanumSquare/master/nanumsquare.css') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'GmarketSansMedium';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'yg-jalnan';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_four@1.2/JalnanOTF00.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'RIDIBatang';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_twelve@1.0/RIDIBatang.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'BMHANNAPro';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Nanum-Godic';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.0/BMHANNAPro.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'ONE-Mobile-Title';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2105_2@1.0/ONE-Mobile-Title.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'NanumBarunpen';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/NanumBarunpen.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'HangeulNuri-Bold';\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_three@1.0/HangeulNuri-Bold.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {\n    font-family: 'Pretendard-Regular';\n    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\n    font-weight: 400;\n    font-style: normal;\n  }\n`;\n\nconst GlobalStyles = (): ReactElement => {\n  return (\n    <Global\n      styles={css`\n        ${fonts}\n        * {\n          box-sizing: border-box;\n        }\n        html,\n        body,\n        #root {\n          height: 100vh;\n          width: 100vw;\n          min-width: 1100px;\n          min-height: 790px;\n          padding: 0;\n          margin: 0;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,\n            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n          background-color: #233142;\n        }\n      `}\n    ></Global>\n  );\n};\n\nexport default GlobalStyles;\n","import React, { CSSProperties, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface IButtonProps {\n  text: string;\n  onClick: () => void;\n  style?: CSSProperties;\n}\n\nconst StyledButton = styled.button`\n  background-color: #4f9da6;\n  color: #233142;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 200px;\n  height: 50px;\n  font-size: 20px;\n  font-weight: bold;\n\n  :hover {\n    /* animation: shake 0.4s;\n    animation-iteration-count: infinite; */\n    box-shadow: 2px 2px 2px lightgrey;\n    background-color: #5ec59ad8;\n  }\n  :active {\n    background-color: #5ec59a;\n    box-shadow: none;\n    animation: none;\n  }\n\n  /* @keyframes shake {\n    0% {\n      transform: rotate(0deg);\n    }\n    50% {\n      transform: rotate(-1deg);\n    }\n    100% {\n      transform: rotate(1deg);\n    }\n  } */\n`;\n\nconst Button = ({ text, onClick, ...rest }: IButtonProps): ReactElement => {\n  return (\n    <StyledButton onClick={onClick} {...rest}>\n      {text}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { CSSProperties, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface ILayoutProps {\n  children: ReactElement[] | ReactElement | ReactNode;\n  style?: CSSProperties;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  width: 100%;\n  height: calc(100% - 50px);\n  position: relative;\n`;\n\nexport const Layout = ({ children, ...rest }: ILayoutProps): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n","import React, { ReactElement, forwardRef } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype TWrapperType = 'box' | 'button' | 'sub' | 'banner' | 'label';\n\ntype TWrapperProps = {\n  children: ReactElement[] | ReactElement;\n  wrapperType: TWrapperType;\n};\n\nconst handleWrapperType = ({ wrapperType }: TWrapperProps) => {\n  switch (wrapperType) {\n    case 'box':\n      return css`\n        width: 650px;\n        justify-content: space-between;\n        align-items: center;\n      `;\n    case 'button':\n      return css`\n        flex-direction: row-reverse;\n        justify-content: space-between;\n        width: 650px;\n        align-items: center;\n      `;\n    case 'sub':\n      return css`\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n      `;\n    case 'banner':\n      return css`\n        justify-content: center;\n        height: 450px;\n        align-items: center;\n      `;\n    case 'label':\n      return css`\n        display: flex;\n        flex-direction: column;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledDiv = styled.div`\n  display: flex;\n  margin: 5px 0;\n  ${handleWrapperType};\n`;\n\nconst Wrapper = forwardRef<HTMLDivElement, TWrapperProps>(({ children, ...rest }: TWrapperProps, ref): ReactElement => {\n  return (\n    <StyledDiv ref={ref} {...rest}>\n      {children}\n    </StyledDiv>\n  );\n});\n\nWrapper.displayName = 'Wrapper';\n\nexport default Wrapper;\n","import React, { CSSProperties, forwardRef, ReactElement, ReactNode } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  padding: 20px 0;\n  position: relative;\n`;\ntype TBannerBackground = {\n  children: ReactElement[] | ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerBackground = forwardRef<HTMLDivElement, TBannerBackground>(\n  ({ children, ...rest }: TBannerBackground, ref): ReactElement => {\n    return (\n      <StyledDiv ref={ref} {...rest}>\n        {children}\n      </StyledDiv>\n    );\n  },\n);\n\nBannerBackground.displayName = 'BannerBackground';\n\nexport default BannerBackground;\n","import React, { CSSProperties, ReactNode, ReactElement } from 'react';\n\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  white-space: nowrap;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`;\n\ntype TBannerText = {\n  children: ReactNode;\n  style: CSSProperties;\n};\n\nconst BannerText = ({ children, ...rest }: TBannerText): ReactElement => {\n  return <StyledDiv {...rest}>{children}</StyledDiv>;\n};\n\nexport default BannerText;\n","import React, { forwardRef } from 'react';\n\nimport BannerBackground from '@atoms/BannerBackground';\nimport BannerText from '@atoms/BannerText';\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useData';\n\nconst Preview = forwardRef<HTMLDivElement>((_, ref) => {\n  const { title, subTitle, tag, font, width, height, backgroundColor, fontColor, titleFontSize, subTitleFontSize, tagFontSize } =\n    useData();\n\n  return (\n    <Wrapper wrapperType=\"banner\">\n      <BannerBackground\n        ref={ref}\n        style={{\n          width: Number(width),\n          height: Number(height),\n          fontFamily: font,\n          backgroundColor,\n          color: fontColor,\n        }}\n      >\n        <BannerText\n          style={{\n            fontSize: Number(titleFontSize),\n            borderBottom: subTitle ? `3px solid ${fontColor}` : 'none',\n            fontWeight: 'bold',\n          }}\n        >\n          {title}\n        </BannerText>\n        {subTitle && <BannerText style={{ fontSize: Number(subTitleFontSize), marginTop: 10 }}>{subTitle}</BannerText>}\n        {tag && <BannerText style={{ fontSize: Number(tagFontSize), position: 'absolute', bottom: 40 }}>{tag}</BannerText>}\n      </BannerBackground>\n    </Wrapper>\n  );\n});\nPreview.displayName = 'Preview';\n\nexport default Preview;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype TDividerType = 'parallel' | 'vertical';\n\ntype TDividerProps = {\n  dividerType: TDividerType;\n};\n\nconst handleDividerType = ({ dividerType }: TDividerProps) => {\n  switch (dividerType) {\n    case 'parallel':\n      return css`\n        width: 110px;\n        border-bottom: 1px solid lightgrey;\n        margin-bottom: 20px;\n        padding-top: 20px;\n      `;\n    case 'vertical':\n      return css`\n        height: 100%;\n        border-right: 1px solid lightgrey;\n        margin-right: 10px;\n        padding-left: 10px;\n      `;\n  }\n};\n\nconst StyledDiv = styled.div<TDividerProps>`\n  ${handleDividerType}\n`;\n\nconst Divider = (props: TDividerProps): ReactElement => {\n  return <StyledDiv {...props}></StyledDiv>;\n};\n\nexport default Divider;\n","import React, { ReactElement } from 'react';\n\nconst GithubIcon = (): ReactElement => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n    </svg>\n  );\n};\n\nexport default GithubIcon;\n","import React, { ReactElement } from 'react';\n\nimport Divider from '@atoms/Divider';\nimport GithubIcon from '@atoms/GithubIcon';\nimport styled from '@emotion/styled';\n\nconst StyledDiv = styled.div`\n  width: 100%;\n  min-width: 1100px;\n  height: 50px;\n  background-color: #ff5959;\n  font-size: 20px;\n  display: flex;\n  padding: 10px;\n  flex-direction: row-reverse;\n  align-items: center;\n  font-weight: bold;\n  color: #233142;\n  z-index: 0;\n`;\n\nconst Header = (): ReactElement => {\n  return (\n    <StyledDiv style={{ zIndex: 10 }}>\n      <a href=\"https://github.com/vagabondms/banner.github.io\" title=\"repo\" target=\"_blank\" rel=\"noreferrer\">\n        <GithubIcon />\n      </a>\n      <Divider dividerType=\"vertical\" />\n      <div>BannerMaker</div>\n    </StyledDiv>\n  );\n};\n\nexport default Header;\n","import React, { ReactElement, useState } from 'react';\nimport { SketchPicker, ColorChangeHandler } from 'react-color';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\ntype TPickerPositionEnum = 'top' | 'left' | 'right' | 'bottom';\n\nexport interface IColorPickerProps {\n  name: string;\n  onChange: ColorChangeHandler;\n  color: string;\n  pickerPosition?: TPickerPositionEnum;\n}\n\nconst StyledDiv = styled.div`\n  width: 100px;\n  height: 30px;\n  border: 1px solid #facf5a;\n  border-radius: 4px;\n  overflow: hidden;\n  padding: 4px;\n  margin: 5px;\n`;\nconst StyledInnerDiv = styled.div`\n  height: 100%;\n`;\n\nconst handlePickerPosition = ({ position }: { position: TPickerPositionEnum }) => {\n  switch (position) {\n    case 'top':\n      return css`\n        bottom: 40px;\n        right: -60px;\n      `;\n    case 'left':\n      return css`\n        bottom: -150px;\n        right: 110px;\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledPopoverDiv = styled.div<{ position: TPickerPositionEnum }>`\n  position: absolute;\n  z-index: 2;\n\n  ${handlePickerPosition};\n`;\nconst StyledCoverDiv = styled.div`\n  position: fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n`;\n\nconst ColorPicker = ({ name, color, onChange, pickerPosition = 'bottom' }: IColorPickerProps): ReactElement => {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledDiv\n        id={name}\n        onClick={() => {\n          setIsVisible(true);\n        }}\n      >\n        <StyledInnerDiv style={{ backgroundColor: color }}></StyledInnerDiv>\n      </StyledDiv>\n      {isVisible ? (\n        <>\n          <StyledPopoverDiv position={pickerPosition}>\n            <StyledCoverDiv\n              onClick={() => {\n                setIsVisible(false);\n              }}\n            ></StyledCoverDiv>\n            <SketchPicker color={color} onChange={onChange}></SketchPicker>\n          </StyledPopoverDiv>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { memo, ReactNode, ReactElement, LabelHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\ninterface ILabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n  children: ReactNode;\n}\n\nconst StyledLabel = styled.label`\n  background: transparent;\n  color: #4f9da6;\n  font-size: 15px;\n  font-weight: bold;\n  white-space: nowrap;\n`;\n\nconst Label = ({ children, ...rest }: ILabelProps): ReactElement => {\n  return <StyledLabel {...rest}>{children}</StyledLabel>;\n};\n\nexport default memo(Label);\n","import React, { ReactElement } from 'react';\n\nimport ColorPicker, { IColorPickerProps } from '@atoms/ColorPicker';\nimport Label from '@atoms/Label';\nimport Wrapper from '@atoms/Wrapper';\n\ntype ILabeledInputProps = IColorPickerProps;\n\nconst LabeledColorPicker = ({ name, color, onChange, ...rest }: ILabeledInputProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <ColorPicker color={color} name={name} onChange={onChange} {...rest}></ColorPicker>\n    </Wrapper>\n  );\n};\n\nexport default LabeledColorPicker;\n","import React, { ReactElement } from 'react';\n\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useData';\nimport LabeledColorPicker from '@molecules/LabeledColorPicker';\n\nconst BackgroundBox = (): ReactElement => {\n  const { backgroundColor, onBackgroundColorChange, fontColor, onFontColorChange } = useData();\n  return (\n    <Wrapper wrapperType=\"box\">\n      <LabeledColorPicker pickerPosition=\"top\" color={fontColor} onChange={onFontColorChange} name=\"폰트색\"></LabeledColorPicker>\n      <LabeledColorPicker\n        name=\"배경색\"\n        pickerPosition=\"top\"\n        color={backgroundColor}\n        onChange={onBackgroundColorChange}\n      ></LabeledColorPicker>\n    </Wrapper>\n  );\n};\n\nexport default BackgroundBox;\n","import React, { InputHTMLAttributes, ReactElement, ReactEventHandler, HTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport interface IInputProp extends HTMLAttributes<HTMLInputElement> {\n  onChange: ReactEventHandler;\n}\n\ntype TStyledInputProp = InputHTMLAttributes<Element>;\n\nconst StyledInput = styled.input<TStyledInputProp>`\n  border: none;\n  text-align: center;\n  background: transparent;\n  color: #ff5959;\n  font-size: 15px;\n  border-bottom: 1px solid #facf5a;\n  width: 200px;\n  margin: 5px;\n  :focus {\n    outline: none;\n    caret-color: #5ec59a;\n    ::placeholder {\n      visibility: hidden;\n    }\n  }\n`;\n\nconst Input = (props: IInputProp): ReactElement => {\n  return <StyledInput {...props} />;\n};\n\nexport default Input;\n","import React, { ReactElement, ReactEventHandler } from 'react';\n\nimport Input from '@atoms/Input';\nimport Label from '@atoms/Label';\nimport styled from '@emotion/styled';\n\ninterface ILabeledInputProps {\n  name: string;\n  placeholder: string;\n  type: 'text' | 'number';\n  value: string;\n  onChange: ReactEventHandler;\n}\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  justify-content: space-between;\n`;\n\nconst LabeledInput = ({ name, ...rest }: ILabeledInputProps): ReactElement => {\n  return (\n    <StyledDiv>\n      <Label htmlFor={name}>{name}</Label>\n      <Input id={name} {...rest}></Input>\n    </StyledDiv>\n  );\n};\n\nexport default LabeledInput;\n","import React, { ReactElement } from 'react';\n\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useData';\nimport LabeledInput from '@molecules/LabeledInput';\n\nconst InputBox = (): ReactElement => {\n  const { title, subTitle, tag, onTitleChange, onSubTitleChange, onTagChange } = useData();\n  return (\n    <Wrapper wrapperType=\"box\">\n      <LabeledInput name=\"제목\" type=\"text\" value={title} onChange={onTitleChange} placeholder=\"제목을 입력하세요\"></LabeledInput>\n      <LabeledInput\n        value={subTitle}\n        onChange={onSubTitleChange}\n        name=\"부제목\"\n        type=\"text\"\n        placeholder=\"부제목을 입력하세요\"\n      ></LabeledInput>\n      <LabeledInput value={tag} onChange={onTagChange} name=\"태그\" type=\"text\" placeholder=\"태그를 입력하세요\"></LabeledInput>\n    </Wrapper>\n  );\n};\n\nexport default InputBox;\n","import React, { ReactElement } from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport type TSlidingModalProps = {\n  children?: ReactElement[] | ReactElement;\n  visible: boolean;\n};\n\nconst handleVisible = ({ visible }: TSlidingModalProps) => {\n  switch (visible) {\n    case true:\n      return css`\n        width: 190px;\n        opacity: 1;\n      `;\n    case false:\n      return css`\n        width: 0px;\n        opacity: 0;\n        * {\n          display: none;\n        }\n      `;\n    default:\n      return css``;\n  }\n};\n\nconst StyledDiv = styled.div`\n  height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: #7281945f;\n  z-index: 1;\n\n  ${handleVisible}\n  transition : 0.5s\n`;\n\nconst SlidingModalInnerWrapper = styled.div`\n  padding: 40px;\n`;\n\nconst SlidingModal = ({ children, ...rest }: TSlidingModalProps): ReactElement => {\n  return (\n    <StyledDiv {...rest}>\n      <SlidingModalInnerWrapper> {children}</SlidingModalInnerWrapper>\n    </StyledDiv>\n  );\n};\n\nexport default SlidingModal;\n","import React, { ReactElement, ReactEventHandler, SelectHTMLAttributes } from 'react';\n\nimport styled from '@emotion/styled';\n\nexport type TOption = { label: string | number; value: string | number };\nexport type TOptions = TOption[];\n\nexport interface ISelectorProps extends SelectHTMLAttributes<HTMLSelectElement> {\n  options: TOptions;\n  value: string | number;\n  onChange: ReactEventHandler;\n}\n\nconst StyledSelect = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n\n  text-align: center;\n  border: 1px solid #facf5a;\n  width: 100px;\n  height: 30px;\n\n  background: transparent;\n  color: #facf5a;\n  margin: 5px;\n  padding: 4px;\n  border-radius: 4px;\n  outline: 0 none;\n`;\nconst StyledOption = styled.option``;\n\nconst Selector = ({ options, ...rest }: ISelectorProps): ReactElement => {\n  return (\n    <StyledSelect {...rest}>\n      {options.map(({ label, value }: TOption) => {\n        return (\n          <StyledOption key={label} value={value}>\n            {label}\n          </StyledOption>\n        );\n      })}\n    </StyledSelect>\n  );\n};\n\nexport default Selector;\n","import React, { ReactElement, ReactEventHandler } from 'react';\n\nimport Label from '@atoms/Label';\nimport { TOptions } from '@atoms/Selector';\nimport Selector from '@atoms/Selector';\nimport Wrapper from '@atoms/Wrapper';\n\ninterface ILabeledInputProps {\n  name: string;\n  options: TOptions;\n  value: string | number;\n  onChange: ReactEventHandler;\n}\n\nconst LabeledSelector = ({ name, options, value, onChange }: ILabeledInputProps): ReactElement => {\n  return (\n    <Wrapper wrapperType=\"label\">\n      <Label htmlFor={name}>{name}</Label>\n      <Selector id={name} value={value} onChange={onChange} options={options}></Selector>\n    </Wrapper>\n  );\n};\n\nexport default LabeledSelector;\n","import { TOptions } from '@atoms/Selector';\n\nexport const fontGenerator = (): TOptions => {\n  return [\n    { label: 'Noto-sans', value: 'Noto-sans' },\n    { label: '고운돋움', value: 'GowunDodum-Regular' },\n    { label: 'G마켓 Sans M', value: 'GmarketSansMedium' },\n    { label: '여기어때 잘난체', value: 'yg-jalnan' },\n    { label: '리디 바탕', value: 'RIDIBatang' },\n    { label: '배민 한나체', value: 'BMHANNAPro' },\n    { label: '원스토어 고딕', value: 'ONE-Mobile-Title' },\n    { label: '나눔 바른펜', value: 'NanumBarunpen' },\n    { label: '한글 누리체', value: 'HangeulNuri-Bold' },\n  ];\n};\n\nexport const widthGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 600; i <= 1000; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\nexport const heightGenerator = (): TOptions => {\n  const result = [];\n  for (let i = 250; i <= 400; i += 50) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n\ntype TFontType = 'title' | 'subTitle' | 'tag';\n\nexport const fontSizeGenerator = (fontType: TFontType): TOptions => {\n  const getDiffSize = (type: TFontType) => {\n    switch (type) {\n      case 'title':\n        return 0;\n      case 'subTitle':\n        return 30;\n      case 'tag':\n        return 30;\n    }\n  };\n\n  const diffSize = getDiffSize(fontType);\n  const result = [];\n  for (let i = 40 - diffSize; i <= 80 - diffSize; i += 5) {\n    result.push({\n      label: i,\n      value: i,\n    });\n  }\n  return result;\n};\n","import React, { ReactElement } from 'react';\n\nimport Divider from '@atoms/Divider';\nimport SlidingModal from '@atoms/SlidingModal';\nimport { TSlidingModalProps } from '@atoms/SlidingModal';\nimport { useData } from '@hooks/useData';\nimport LabeledSelector from '@molecules/LabeledSelector';\nimport { fontSizeGenerator, fontGenerator } from '@utils/data';\nimport { widthGenerator, heightGenerator } from '@utils/data';\ntype TSlidingMenuProps = TSlidingModalProps;\n\nconst InputBox = ({ visible }: TSlidingMenuProps): ReactElement => {\n  const {\n    width,\n    height,\n    font,\n    onFontChange,\n    onWidthChange,\n    onHeightChange,\n    titleFontSize,\n    subTitleFontSize,\n    tagFontSize,\n    onTitleFontSizeChange,\n    onSubTitleFontSizeChange,\n    onTagFontSizeChange,\n  } = useData();\n  return (\n    <SlidingModal visible={visible}>\n      <LabeledSelector name=\"폰트\" value={font} onChange={onFontChange} options={fontGenerator()}></LabeledSelector>\n      <Divider dividerType=\"parallel\" />\n      <LabeledSelector\n        name=\"제목\"\n        value={titleFontSize}\n        onChange={onTitleFontSizeChange}\n        options={fontSizeGenerator('title')}\n      ></LabeledSelector>\n      <LabeledSelector\n        name=\"부제목\"\n        value={subTitleFontSize}\n        onChange={onSubTitleFontSizeChange}\n        options={fontSizeGenerator('subTitle')}\n      ></LabeledSelector>\n      <LabeledSelector\n        name=\"태그\"\n        value={tagFontSize}\n        onChange={onTagFontSizeChange}\n        options={fontSizeGenerator('tag')}\n      ></LabeledSelector>\n      <Divider dividerType=\"parallel\" />\n      <LabeledSelector options={widthGenerator()} value={width} onChange={onWidthChange} name=\"배경 넓이\"></LabeledSelector>\n      <LabeledSelector options={heightGenerator()} value={height} onChange={onHeightChange} name=\"배경 높이\"></LabeledSelector>\n    </SlidingModal>\n  );\n};\n\nexport default InputBox;\n","import React, { ReactElement, useRef, useState } from 'react';\n\nimport Button from '@atoms/Button';\nimport { Layout } from '@atoms/Layout';\nimport Wrapper from '@atoms/Wrapper';\nimport { useData } from '@hooks/useData';\nimport Banner from '@molecules/Banner';\nimport Header from '@molecules/Header';\nimport BackgroundBox from '@organisms/BackgroundBox';\nimport InputBox from '@organisms/InputBox';\nimport SlidingMenu from '@organisms/SlidingMenu';\nimport capture from 'html2canvas';\n\nconst App = (): ReactElement => {\n  const bannerRef = useRef<HTMLDivElement>(null);\n  const [visible, setVisible] = useState(false);\n  const { title } = useData();\n\n  const captureImage = async () => {\n    if (bannerRef.current) {\n      const result = await capture(bannerRef.current);\n      if (result) {\n        const link = document.createElement('a');\n        const underbarTitle = title.replaceAll(/(\\s)+/g, '_');\n        link.download = `${underbarTitle}.png`;\n        link.href = result?.toDataURL() ?? '';\n        link.click();\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Layout>\n        <Banner ref={bannerRef}></Banner>\n        <InputBox></InputBox>\n        <BackgroundBox />\n        <Wrapper wrapperType=\"button\">\n          <Button\n            text={`추가 설정 ${visible ? '닫기' : '열기'}`}\n            onClick={() => {\n              setVisible(!visible);\n            }}\n          ></Button>\n          <Button\n            text=\"다운로드\"\n            onClick={() => {\n              captureImage();\n            }}\n          ></Button>\n        </Wrapper>\n        <SlidingMenu visible={visible}></SlidingMenu>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from '@hooks/useData';\nimport GlobalStyles from '@utils/global-styles';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}